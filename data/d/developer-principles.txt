https://indieweb.org/developer-principles

{{stub}}
'''<dfn>developer-principles</dfn>''' are an in-progress Brainstorm of the IndieWeb [[Principles]] intended for a developer audience.

{{warning|This is an in-progress [[principles#developer_principles|Brainstorm of the principles]] intended for a developer audience}}

Since the principles largely started out at as developer principles, which still make sense for developers, as we rewrite/reframe the principles to be more broadly applicable, user-friendly, accessible, we should keep (and maintain) the versions that are intended for developers. To start with, most of these are merely a copy/paste of the existing principles since many were already more applicable to developers. — {{t}}

Including also the [[principles#Own_your_identity|Own your identity]] brainstorm as well.

== Key Principles ==
# ✊ <span id="your-identity">'''[[principles#Own_your_identity|Own your identity]]'''</span>. 
# 🗄 <span id="your-data">'''[[own-your-data|Own your data]]'''</span>. 
# 🔍 <span id="visible-data">'''Use & publish visible data'''</span> for humans first, machines second. See also [[DRY]].
# 💪 <span id="make-what-you-need">'''[[make what you need|Make what you need]]'''</span>. Make tools, templates, etc. for yourself first, not for all of your friends or ”everyone“. If you design for some hypothetical user, they may not actually exist; if you make for yourself, you actually do exist. Make something that satisfies your needs (also known as [[scratch your own itch]]), and is compatible for others, e.g. by practicing [[POSSE]], you benefit immediately, while staying connected to friends, without having to convince anyone. If and when others join the indieweb, you all benefit.
# 😋 <span id="use-what-you-make">'''[[use what you make|Use what you make]]!'''</span> Whatever you build you should actively use. If you aren't depending on it, why should anybody else? We also use the metaphor '''[[eat what you cook]]''' for this principle. Personal use helps you see both problems and areas for improvement more quickly, and thus focus your efforts on building the indieweb around actual needs and consistently solving immediate real world problems, instead of spending lots of time solving what may be theoretical problems.
# 📓 <span id="document">'''[[document|Document]]'''</span> your stuff. You've made a place to speak your mind, use it to document your processes, ideas, designs and code. Help others benefit from your journey, including your future self!
# 💞 <span id="share">'''[[open source|Open source]]'''</span> your stuff! You don't have to, of course, but if you like the existence of the indie web, making your code open source means other people can get on the indie web quicker and easier.
# 📐 <span id="design-first">'''[[UX]] and [[design]] is more important'''</span> than protocols, formats, data models, schema etc. We focus on UX first, and then as we figure that out we build/develop/subset the absolutely simplest, easiest, and most minimal protocols & formats sufficient to support that UX, and nothing more. AKA UX before plumbing.
# 🌐 <span id="modularity">'''[[modularity|Modularity]]'''</span>. '''Build platform agnostic platforms.''' The more your code is modular and composed of pieces you can swap out, the less dependent you are on a particular device, UI, templating language, API, backend language, storage model, database, platform. Modularity increases the chance that at least ''some'' of it can and will be re-used, improved, which you can then reincorporate. AKA [[building-blocks]]. AKA "small pieces loosely joined".
# 🗿 <span id="longevity">'''[[Longevity]]'''</span>. Build for the '''[http://adactio.com/articles/1522/ long web]'''. If human society is able to preserve ancient papyrus, Victorian photographs and dinosaur bones, we should be able to build web technology that doesn't require us to destroy everything we've done every few years in the name of progress. Consider making things on the web that are <cite>[https://jeffhuang.com/designed_to_last/ designed to last]</cite>.
# ✨ <span id="pluralism"><span id="plurality"><span id="Plurality">'''[[pluralism|Pluralism]]'''</span></span></span>. With IndieWebCamp we've specifically chosen to encourage and embrace a plurality of diverse approaches &amp; projects.  This <span id="Background">background</span> makes the IndieWeb stronger and more resilient than any one (often [[monoculture]]) approach.
# 🎉 <span id="fun">'''Above all, Have [[fun]]'''</span>.  When the web took off in the 90's people began designing personal sites with tools  such as GeoCities. These spaces had Java applets, garish green background and seventeen animated GIFs. It may have been ugly and  badly coded but it was fun. Keep the web [https://archive.org/details/iwc-west-2020-making-the-web-whimsical weird and interesting].

== Consolidated developer principles ==

Thinking about having a discrete set of principles that can sit below and support the broader [[principles]], {{paulrobertlloyd}} pulled out those from the above that appeared aimed at developers and came up with the following list.

Each of the headings includes ‘make’ to help clarify who the principles are aimed at. It also means they work better together as a cohesive set. The suggested emoji are also food related to underline the idea of making.

They are ordered by the priority you’d follow when building something new (you can’t document or open source something that you haven’t built yet, for example).

; 🍩 Make it user-centred
: [[easier|Usability]] is more important than protocols, formats, data models, schema etc. Start with user needs, and figure out how to build the simplest, easiest and most minimal solution that can address them.

; 🥪 Make what you need
: Don’t design for a hypothetical user as they may not exist. Make something that satisfies your own needs, first. Also known as [[scratch your own itch]].

; 🍽️ Use what you make
: Personal use can help you uncover problems and areas for improvement more quickly. Focus on solving real problems instead of theoretical ones. Also known as [[eat what you cook]].

; 🍭 Make it your way
: We can innovate faster if everyone builds what works for them and we figure out how to interoperate between different approaches later. Having a [[plurality]] of projects makes the indie web more inclusive than other open source efforts.

; 🌮 Make it open
: Building software collectively and in the open instead of privately and in the abstract means it is more likely to be used. Making your code [[open source]] means other people can build upon what you’ve made.

; 🍱 Make it modular
: The more modular your code is, the less dependent you’ll be on a particular device, interface, API, programming language, storage model or platform. [[modularity|Modularity]] increases the chances that parts of it will be re-used and improved, changes which you can reincorporate later.

; 📖 Document what you make
: [[document|Document]] your process, ideas, designs and code. Help others benefit from your journey — including your future self!

; 🥫 Make it last
: If society can preserve ancient papyrus, Victorian photographs and dinosaur bones, we should be able to build [[longevity|durable]] web technology that doesn’t require destroying everything every few years in the name of progress.

== See Also ==
* [[principles]]
