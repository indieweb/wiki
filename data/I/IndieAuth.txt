https://indieweb.org/IndieAuth

'''<dfn>[https://indieauth.net/ IndieAuth]</dfn>''' is a federated login protocol for [[Web sign-in]], enabling users to use their own [[domain]] to sign in to other sites and services. IndieAuth can be used to implement <strong>OAuth2 login</strong> AKA <strong>OAuth-based login</strong>.

IndieAuth is built on ideas and technology from existing proven technologies like [[OAuth]] and [[OpenID]] but makes it easier for users as well as developers. It decentralizes much of the process so completely separate implementations and services can be used for each part.

<div style="padding: 10px;  border: 1px #96E48E solid; background-color: #D9FFDA; border-radius: 6px;>
Read More: [https://aaronparecki.com/2018/07/07/7/oauth-for-the-open-web IndieAuth: OAuth for the Open Web]
</div>

If you’re familiar with writing an OAuth client, then you're familiar with the problem of having to register your client manually with each OAuth provider. IndieAuth uses DNS as a replacement for client registration, thereby eliminating the need for any manual registration with providers.

<div style="padding: 10px; border: 1px #ccc solid; background-color: #fffee7;"><p>'''Note:''' IndieAuth is often conflated with the [[indieauth.com|IndieAuth.com]] service provider. The first is the subject of this page: ''the way the IndieAuth protocol works''. The second is ''a service'' that provides an authorization endpoint, and was also previously used by this wiki until the wiki switched to using [[indielogin.com]].</p></div>

== Why ==

By choosing your IndieAuth provider, you can tell applications where to send you to sign in. This gives you more control over the privacy and security of your logins.

Most [[Micropub]] clients use [[IndieAuth]] to log you in, obtaining your authorization by directing you to your chosen IndieAuth server. This allows you to use your own website to log in to the tools you use to post content.

IndieAuth is part of taking back control of your online identity. Instead of logging in to websites as “you on Twitter” or “you on Facebook”, you should be able to log in as just “you”. We should not be relying on [[silos]] to provide our authenticated identities, we should be able to use our own [[personal domain|personal domains]] to log in to sites everywhere.

You can use it right now to log in to this wiki and contribute to the [[community]], including doing common things like:
* Adding yourself to [[chat-names]] after joining one of our [[discuss|discussion channels]], and
* RSVP to [[events|an upcoming event]].

== How it works ==
Basic flow with a user signing in to a (web) app
# '''The user fills in his/her personal URL''' This is called [[Web sign-in]].
# '''The app fetches the URL, looking for an authorization endpoint.''' For this, the user can use IndieAuth.com, but it can also be at their own domain. The app redirects the User to their authorization endpoint.
# '''The user authenticates at their own authorization endpoint.''' IndieAuth.com uses [[RelMeAuth]] to authenticate users, but if a user uses an authorization endpoint on his/her own site, it can be a password, e-mail link, or any other authentication mechanism the authorization endpoint provides. They prove their identity to their authorization endpoint while the app waits for them to complete.
# '''The authorization endpoint issues a temporary authorization code''', and sends it to the app by redirecting the user's browser back to the app.
# '''The app checks the code with the authorization endpoint''', and if the code is valid and if the user’s identifier matches the identifier the authorization endpoint gives, the login is completed, and the user can enter and use the app.

== How to ==
If all you're trying to do is log in to the wiki, then you may not need to set up IndieAuth at all! Instead, you can just link to your existing Twitter or GitHub accounts and the wiki will use those to authenticate you! See [https://indielogin.com/setup indielogin.com/setup] for more details.

=== Set up using IndieAuth.com ===
[[indieauth.com|IndieAuth.com]] is a service that allows you to sign in as your site by using your social media profiles. Your homepage and social media profiles need to link to each other for verification. Instead of registering for an account at indieauth.com, it uses your existing social media accounts to verify you own the URL you're signing in as.

# Add [[rel-me]] links to your homepage for various ways to reach you,<br>e.g. <code><nowiki><a href="https://github.com/aaronpk" rel="me">GitHub</a></nowiki></code>.
# Make sure any social media profiles you linked to have a link back to your homepage.
# Finally, include <code><link rel="authorization_endpoint" href="https://indieauth.com/auth"></code> on your homepage.

You are done! Try to log in to a site that supports IndieAuth, such as:
* [https://indieweb.org/Special:UserLogin this wiki]
* [https://telegraph.p3k.io/login Telegraph]
* [https://pin13.net/login/ this demo page on pin13.net]

These services should redirect you to your chosen IndieAuth endpoint to sign in, which in this case is indieauth.com.

See: [https://indieauth.com/setup full setup instructions]

=== Set up in WordPress ===
If you use WordPress, you can install the [[Wordpress IndieAuth Plugin]] which provides a built-in IndieAuth server.

=== Set up your own IndieAuth provider ===
Use an existing [[#Implementations|implementation]] or [[authorization-endpoint|build your own!]]

== IndieWeb Examples ==
<span id="Users"></span>

The following people have an authorization endpoint on their own domain.

=== Aaron Parecki ===
{{aaronpk}} at https://aaronparecki.com/auth as of [https://aaronparecki.com/2016/04/13/8/indieauth 2016-04-13]. As of [https://aaronparecki.com/2017/10/04/23/passwordless-logins 2017-10-04], authentication is done via a push notification to his mobile phone rather than entering a password.

=== Sebastiaan Andeweg ===
{{sebsel}} has an authorization endpoint at https://seblog.nl/auth as of IndieWebWeek 2017 in Düsseldorf and Nürnberg.

=== Martijn van der Ven ===
{{martijnvdven}} has an authorization endpoint on <code>http://vanderven.se/martijn/</code> as of 2017-06-30. Powered by [[selfauth]].

=== Jeena Paradies === 
{{jeena}} has an authorization endpoint at https://jeena.net/indieauth as of IndieWebCamp 2017 in Berlin

=== Malcolm Blaney ===
{{mblaney}} has an authorization endpoint on https://unicyclic.com/mal as of IndieWeb Summit 2018.

=== Kristof De Jaeger ===
{{realize.be}} has an authorization endpoint on https://realize.be as of November 2018.

<a name="Implementations"></a>
== IndieAuth Providers ==
=== IndieAuth.com ===
* [[IndieAuth.com]] is an implementation of [[Web sign-in]]/[[RelMeAuth]] with an HTTP API
* [[IndieAuth.com]] is a common authorization server implementation used by many people

=== selfauth ===
* [[selfauth]] is a single-user authorization endpoint implemented in a single PHP file
* https://glitch.com/~befitting-price is a nodejs port of [[selfauth]] written for nodejs running on glitch.com

=== Acquiescence ===
* [https://github.com/barryf/acquiescence Acquiescence] is a simple IndieAuth authorization and token endpoint. It is currently limited to [[GitHub]] for authorization. {{barryf}} uses Acquiescence on his website.

=== Wordpress IndieAuth Plugin ===
* The [[Wordpress IndieAuth Plugin]] provides a self-contained IndieAuth server for Wordpress

=== Known ===
* [[Known]] provides a built-in IndieAuth server

=== Comment Parade ===
* [[commentpara.de]] provides IndieAuth identities to anyone wishing to log in to a website anonymously.

=== Drupal IndieWeb Module ===
* The [https://drupal.org/project/indieweb Drupal IndieWeb] module provides a self-contained IndieAuth server for Drupal

=== indieauth-openid ===

* [[indieauth-openid]] allows to use an existing OpenID setup for IndieAuth.

=== IndieCert ===
* [[indiecert]] was an implementation of an IndieAuth server using [https://github.com/aaronpk/IndieAuth.com/issues/77 client certificates] for authentication.

=== Micro.blog ===
* [[Micro.blog]] implements IndieAuth for all hosted micro.blog subdomains as well as verified sites.
** [http://www.manton.org/2018/07/indieauth-for-micro-blog.html IndieAuth for Micro.blog]
** [http://www.manton.org/2018/07/indieauth-for-external-blogs.html IndieAuth for external blogs]

=== Cellar Door ===

* https://glitch.com/~cellar-door a nodejs implementation with tests and hcard support ([http://github.com/nilsnh/cellar-door Github project]). 

=== Dobrado ===

[[dobrado]] provides a built-in IndieAuth server.

=== Micropub ===
<span id="Use_with_Micropub"></span>

Most [[Micropub]] apps use IndieAuth to allow the app to post to your site

* [[Micropub/Clients]]
* [[Micropub/Servers]]

=== Microblog.pub ===
[https://github.com/tsileo/microblog.pub Microblog.pub] implements IndieAuth endpoints (authorization and token endpoint) with U2F support and you can use your ActivityPub identity to login to other websites/app

=== Grav IndieAuth Plugin ===

The [https://github.com/metbril/grav-plugin-indieauth IndieAuth Plugin for Grav] adds IndieAuth support to a Grav website.

== Services ==
=== IndieLogin.com ===
[[IndieLogin.com]] is a service that consumes IndieAuth. It authenticates users using [[IndieAuth]], [[RelMeAuth]], email and PGP, wrapping all the logic in a simple API. It is a very easy way to get started consuming IndieAuth logins.

[https://indielogin.com/api Read the full documentation]

=== IndieAuth.com ===
The IndieAuth.com service provides an authorization endpoint to bootstrap your [[Micropub]] server development. It lets you authenticate via GitHub, email, and PGP. Eventually this will be replaced with a new service, [[MyIndieAuth.com]], although development of that service has not yet begun.

Historically, IndieAuth.com also provided an API for developers to use to authenticate users, tho this is being phased out in favor of [[IndieLogin.com]].

[https://indieauth.com/developers Read the full documentation]

The [https://github.com/aaronpk/IndieAuth.com IndieAuth.com source code] is available on GitHub.

== Supporting Sites ==
(This section is a stub and needs expansion!)

=== Servers ===
The following servers provide an IndieAuth identity for anyone using the service or plugin

* [[micro.blog]]
** micro.blog sites support IndieAuth to post from Micropub apps
* [[WordPress]] can support IndieAuth via a plugin
** [[Wordpress IndieAuth Plugin]]
* [[Drupal]] can support IndieAuth via a module
** [https://www.drupal.org/project/indieweb Drupal IndieWeb module]
* [[selfauth]]
** selfauth is a minimal PHP IndieAuth server
* ...

The IndieAuth servers below provide an IndieAuth identity for individuals, not necessarily offered to other users:

* [[p3k]] used by {{aaronpk}}
* ...

=== Apps ===
There are a growing number of web sites that you can log into using IndieAuth and gain additional functionality:

* Most [[Micropub]] clients use IndieAuth to sign in
* [[Main Page|IndieWeb.org]]
** This site! Signing-in with IndieAuth enables you to edit the wiki!
* [https://telegraph.p3k.io/ Telegraph]
** [[Telegraph]] allows people to send [[Webmentions]] after logging in.
* [[unicyclic]]
** https://unicyclic.com is a reader that you can sign in to with IndieAuth.
* [[Monocle]], [[Together]], [[Indigenous]] (iOS and Android)
** These [[readers]] requires IndieAuth to sign in
* [[OwnYourGram]]
** OwnYourGram enables you to copy your Instagram photos to your website
* [[OwnYourSwarm]]
** OwnYourSwarm enables you to copy your Swarm checkins to your website
* ...

== IndieAuth Protocol ==

A user should only have to communicate their own homepage URL to the website they are trying to log in to. This is the core idea of [[Web sign-in]]. This means a developer should in their turn be able to find everything they need on that one user supplied URL.

=== Discovery from the User's Homepage ===

IndieAuth defines two new [[rel-values|<code>rel</code> values]] for this. A user can simply link to the endpoints they want to use from their homepage, add the correct <code>rel</code> value and be done.

An example would be to link to them in the <code><head></code> section of their HTML, like so:

    <link rel="authorization_endpoint" href="https://example.com/auth">
    <link rel="token_endpoint" href="https://example.com/token">

Developers can discover these endpoints using traditional HTML or Microformats parsing.

=== The Authorization Endpoint ===

<p class="plainlinks" style="text-indent: 2em; font-style: italic;">See '''[[authorization-endpoint]]''' for implementation details.</p>

The authorization endpoint is a page where applications can send users to and asking them to identify themselves. Because the user defines their own endpoint on their homepage, this can be part of their own website or a completely separate service. This is how the user provides proof they really operate the homepage URL they provided.

An application can also ask the user to grant it certain rights by requesting them through the authorization endpoint. A [[Micropub]] client might ask to be allowed <code>create</code> rights. The user can then either accept these or not when they have been redirected to their endpoint.

For developers, the authorization endpoint also functions as a verification service. If they get a code from a user they can check its validity with the endpoint to make sure it was truly issued by the user.

==== Third Party Services ====

* [[IndieAuth.com]] has an authorization endpoint that lets you use [[silo]] accounts like [[GitHub]] or simple alternatives like [[email]] as authentication options. Use the URL <code>https://indieauth.com/auth</code> as your value for <code>authorization_endpoint</code>.
* [[commentpara.de]] allows anyone to (anonymously or pseudonymously) log in to websites supporting IndieAuth by using <code>https://commentpara.de/</code> as their homepage.
* See [[#Implementations|Implementations]] above for more details, or to find if your platform already has a built-in option.

==== Self-Hostable Implementations ====

* [[selfauth]] is an authorization endpoint in [[PHP]] made to be easy to deploy.
* [https://github.com/barryf/acquiescence Acquiescence] is an authorization endpoint in [[Ruby]] developed and used by {{barryf}}.
* [[Known]] enables an authorization endpoint when the [https://github.com/idno/Known/tree/master/IdnoPlugins/IndiePub IndiePub plugin] is turned on.
* [[Wordpress IndieAuth Plugin]] provides an authorization endpoint to WordPress sites.
* [[dobrado]] provides an authorization endpoint

=== The Token Endpoint ===

<p class="plainlinks" style="text-indent: 2em; font-style: italic;">See '''[[token-endpoint]]''' for implementation details.</p>

The token endpoint is a service that creates access tokens for applications to store and use in [[Micropub]] requests. After authorizing the application, the token endpoint creates a token that the application stores. The application will send it in a header when making a Micropub request, and the Micropub endpoint is expected to be able to validate the token while processing the request.

==== Third Party Services ====

* [[IndieAuth.com]] has a token endpoint. Use the URL <code>https://tokens.indieauth.com/token</code> as your value for <code>token_endpoint</code>.

==== Self-Hostable Implementations ====

* [https://github.com/barryf/acquiescence Acquiescence] is a token endpoint in [[Ruby]] developed and used by {{barryf}}.
* [[Known]] enables a token endpoint when the [https://github.com/idno/Known/tree/master/IdnoPlugins/IndiePub IndiePub plugin] is turned on.
* [[Wordpress IndieAuth Plugin]] provides a token endpoint to WordPress sites.
* [[dobrado]] provides a token endpoint

== FAQ ==
The IndieAuth.com FAQ is here:
* https://indieauth.com/faq

Feel free to add more questions here that seemed to be asked more than once.

=== How is IndieAuth different from OpenID Connect ===
{{main|How is IndieAuth different from OpenID Connect}}

=== Do I need a silo account ===
No silo accounts are required for IndieAuth services, but some may chose to use them as an authentication method.

See also [[indieauth.com#Do_I_need_a_silo_account|the answer to this question on the IndieAuth.com page]].

=== Do I need to enter my URL every time ===
Q: Do I need to enter my URL every time I log in to an app that uses IndieAuth?

Yes, like traditional username/password forms, you need to enter your URL when you log in to an app. Browsers will remember your URL you enter and will suggest it using their normal autofill mechanisms as well.

[[File:indieauth-autofill.jpg|300px]]

=== Can anyone supply the URL as the client ID when they make the request? ===

Yes, just like you can find someone's client ID and supply that in the request with public client in OAuth 2.0.

In OAuth 2.0 there is the idea of public vs. confidential clients, public clients are when things can't be kept secret, like native apps.

A secret already can't be used when it is deployed in native apps in traditional OAuth 2.0, so we're just taking the idea of public clients and doing all the protections that you would have to do with public clients and extending that to all clients.

=== Should I use HTTPS ===

<span id="Security"></span>
<span id="Should_the_specification_make_recommendations_on_HTTPS.3F"></span>

The IndieAuth specification is an extension of OAuth 2.0, and [https://tools.ietf.org/html/rfc6749#section-10.5 OAuth 2.0 recommends using https URLs] for everything. IndieAuth doesn't provide any new reason to require or not require https so delegates this recommendation to OAuth 2.0.

=== Why do I see form-encoded responses ===

<span id="IndieAuth_using_form-encoded_responses_instead_of_JSON"></span>

IndieAuth originally used standard form-encoding for requests and responses, since it has been a standard encoding format since the beginning of the web.

Over time, implementations added support for sending JSON responses as well as form-encoded. When IndieAuth was written up as a [https://www.w3.org/TR/indieauth/ formal OAuth 2.0 extension], it documented only the JSON responses in order to be compatible with OAuth 2.0. At that point, most implementations already supported JSON responses, or did content negotiation to support both formats.

=== How can an application get additional information about the user ===

<span id="Requesting_additional_user_details"></span>

The IndieAuth specification offers the user’s profile page where further public information about the user can be found, e.g. by parsing an [[h-card]]. There is currently no common way of retrieving private information.

=== How is this any different than OpenID 1.0? ===

OpenID 1.0 solved a lot of the same problems as this, and then those problems kind of got push by the wayside when OpenID Connect came around.

With OpenID 1.0, the whole idea was bring your own identity. In fact, it was only the "prove the identity" aspect. It didn't include anything around OAuth which is about the ability to get something that can be used to access an API. OpenID 1.0 only solved half of that first of it all.

So yes, the original goals of OpenID 1 absolutely apply. OpenID Connect chose to ignore individual identity and instead, switched to where enterprises issue identities and everybody is siloed off and the issuer controls the identity.

=== Does this use Webfinger for discovery? ===

IndieAuth uses even less steps than Webfinger. Currently all IndieAuth applications a user enters their full URL which then fetchs HTTP and HTML link rels to find the appropriate endpoints.

If you wanted to have a user type in an email address to start out with, you would then need to use something like WebFinger to turn that into URL first.

We don't see a lot of that being done right now in the things that are running today.

=== If you have no pre-existing registration, how are you identifying yourself? ===

Clients are all identified by a URL. In the OAuth 2.0 world, the primary thing that client registration gives you is: it ensures that system exchanging the code is actually the same system the code was issued to.

When all clients are public clients, like JavaScript apps and mobile apps, you don't get a secret when you register, so you have to register a callback URL. The  URL basically acts as authentication already in the existing OAuth 2.0 world and OpenID Connect, what we've done with IndieAuth is said that client IDs don't need to be pre-registered because the only thing it gives you is a way to put that information about the app there.

So instead of pre-registration, registration is DNS. An application will be running at example.com, that's already an identifier that's unique in the system, that is used as the identifier, and if we need to find out information about the app we can go and look it up at that URL.

== Issues ==
For issues about the IndieAuth spec, please see the [https://github.com/indieweb/indieauth/issues IndieAuth GitHub project].

For issues with the IndieAuth.com service, please see the [https://github.com/aaronpk/IndieAuth.com/issues IndieAuth.com Github project].

<span id="naming_confusion"></span>
<span id="how_to_should_include_endpoint_definition"></span>
<span id="Need_Simple_Copy_Paste_How_To"></span>
<span id="To_do"></span>

Older discussions and brainstorming has been moved to [[IndieAuth-brainstorming]].

== Talks and Demos ==
* 2018-12-10 [https://www.youtube.com/watch?v=EeCNlB7v08I IndieAuth: OAuth for the Open Web] at the W3C Strong Authentication and Identity Workshop
* 2018-07 [https://twitter.com/OAuth_io/status/1023746803395514368 OAuth.io included IndieAuth in a presentation at API Days] in San Francisco
* 2016-09-24 Sebastian Lasse [https://indieweb.org/2016/Brighton/Demos#Sebastian_Lasse had a demo] showing the use of protocol handlers to keep the "me" in the browser ([https://www.youtube.com/watch?v=W70wd56i0Bg&t=34m1s video]) at [https://indieweb.org/2016/Brighton IWC Brighton]
* 2014-05-06: Aaron Parecki [http://indiewebcamp.com/2014-05-06-iiw-indieauth held a session] at [http://www.internetidentityworkshop.com/ Internet Identity Workshop XVIII]
* 2013-08-13: Aaron Parecki [http://aaronparecki.com/presentations/2013/08/08/1/indieweb-w3c-workshop-on-social-standards gave a talk on IndieAuth] at the W3C Workshop on Social Business
* 2012-06-24: Aaron Parecki [http://opensourcebridge.org/sessions/856 gave a talk on IndieAuth] at Portland's Open Source Bridge 2012 conference! Tuesday June 26th at 4:45pm

== Articles ==
* {{citation
| title = Identity for the Decentralized Web with IndieAuth
| url = https://hacks.mozilla.org/2018/10/dweb-identity-for-the-decentralized-web-with-indieauth/
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2018-10-24
| archiveurl = http://web.archive.org/web/20181030031543/https://hacks.mozilla.org/2018/10/dweb-identity-for-the-decentralized-web-with-indieauth/
}}
* {{citation
| title = OAuth for the Open Web
| url = https://aaronparecki.com/2018/07/07/7/oauth-for-the-open-web
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2018-07-07
| archiveurl = http://web.archive.org/web/20180710220016/https://aaronparecki.com/2018/07/07/7/oauth-for-the-open-web
}}
* {{citation
| title = IndieAuth for Micro.blog
| url = https://manton.micro.blog/2018/07/02/indieauth-for-microblog.html
| author = <a href="http://manton.org" class="h-card">Manton Reece</a>
| published = 2018-07-02
| archiveurl = http://web.archive.org/web/20180717124757/https://manton.micro.blog/2018/07/02/indieauth-for-microblog.html
}}
* {{citation
| title = WebSub and IndieAuth Published on w3.org!
| url = https://aaronparecki.com/2018/01/23/34/w3c-websub-indieauth
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2018-01-23
| archiveurl = http://web.archive.org/web/20180125010525/https://aaronparecki.com/2018/01/23/34/w3c-websub-indieauth
}}
* {{citation
| title = IndieAuth
| url = https://www.oauth.com/oauth2-servers/indieauth/
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2016-08-30
| archiveurl = https://web.archive.org/web/20171026202106/https://www.oauth.com/oauth2-servers/indieauth/
}} and sub-chapters on OAuth.com:
** {{citation
| title = IndieAuth Sign-In Workflow
| url = https://www.oauth.com/oauth2-servers/indieauth/sign-in/
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2016-08-30
| archiveurl = https://web.archive.org/web/20171026202346/https://www.oauth.com/oauth2-servers/indieauth/sign-in/
}}
** {{citation
| title = IndieAuth Authorization Workflow
| url = https://www.oauth.com/oauth2-servers/indieauth/authorization/
| author = <a href="https://aaronparecki.com/" class="h-card">Aaron Parecki</a>
| published = 2016-08-30
| archiveurl = https://web.archive.org/web/20171026202415/https://www.oauth.com/oauth2-servers/indieauth/authorization/
}}

== See Also ==
* [[IndieAuth-spec]]
* https://en.wikipedia.org/wiki/IndieAuth
* [[Web sign-in]]
* [[RelMeAuth]]
* [[sign-in-use-cases|Web Sign-In Use Cases]]
* [[IndieAuth-brainstorming|IndieAuth Brainstorming]]
* [https://indieweb.org/images/2/2f/indieAuthProp.svg An (unofficial) proposal for an IndieAuth logo]
* [[Zero Registration]]

[[Category:building-blocks]]
[[Category:IndieAuth]]
