https://indieweb.org/fragmention

A '''<dfn>fragmention</dfn>''' is an extension to URL syntax that links and cites a phrase within a document by using a URL fragment consisting of the phrase itself, including whitespace.

Example Fragmention:
* <kbd>http://www.kevinmarks.com/w3cannotation.html#most%20robust%20reference</kbd>


;Status
:This is a '''Living Specification''' yet mature enough to encourage [[#IndieWeb_Examples|implementations]] and [[#Issues|feedback]].
;Latest Published Version
:https://indieweb.org/fragmention
;Participate
:[https://github.com/indieweb/fragmention/issues issues]
:[https://chat.indieweb.org/dev discussion on #indieweb-dev] ([irc://irc.freenode.net/indieweb-dev on Freenode IRC])
;Editor
:{{kevinmarks}}
;Authors
:Other contributors: [https://indieweb.org/wiki/index.php?title=Vouch&action=history revision history]
;License
:<small>Per [http://creativecommons.org/publicdomain/zero/1.0/ CC0], to the extent possible under law, the editor(s) have waived all copyright and related or neighboring rights to this work. In addition, as of {{CURRENTYEAR}}-{{CURRENTMONTH}}-{{CURRENTDAY2}}, the editors have made this specification available under the [http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0 Open Web Foundation Agreement Version 1.0].</small>

__TOC__

== Behavior ==
Fragmentions find the first matching phrase in a document and focus its closest surrounding element. The match is determined by the case-sensitive string following the # The closest surrounding element may be a span, paragraph, heading, button, input, or any other container.

== Use Cases ==
If you click on a link to read a specific part of a web page, finding the right part of the document can be fiddly, especially on a phone. You end up scrolling aimlessly, or trying to use the hidden "find in page" feature. 

To scroll stright to the right bit of a web page, we need to link to any text on the page, not just places where the author put in an <code>id</code> or <code>name</code>. The simplest way to do this is make the browser try a bit harder when given a fragment to follow your intent. 

=== Citation ===
While you can use <code>&lt;blockquote&gt;</code> to quote a text directly, linking to it in context is important too, and being able to link to the mentioned text directly is a big advantage.
=== Linking to a passage robustly ===
Web pages do get reformatted and relaid out. By linking to the actual text of the page, rather than the structural elements, the link is more robust, and the linked-to text is available in the fragment itself.
=== Annotation ===
By combining a fragment link with [[webmention]] you can direct your comment to be alongside part of the linked-to page, rather than the whole of it.
== Syntax ==
As an HTML [https://html.spec.whatwg.org/#the-id-attribute id] [https://html.spec.whatwg.org/#The%20value%20must%20not%20contain%20any%20ASCII%20whitespace must not contain any whitespace], we can be sure that a fragment that includes space characters will not conflict with any existing element ID's. A fragmention MUST include at least one space character.

;(space)
:Use <nowiki>%20</nowiki> (instead of <nowiki>+</nowiki> ) for space characters in your fragmention. 
;+
:Fragmentions are decoded before search, which means <nowiki>+</nowiki> plus signs can be interpreted as spaces and thus MUST be escaped (<nowiki>%2B</nowiki>) if you mean to refer to a literal "+" character like "a+b" (<nowiki>a%2Bb</nowiki>).
;<nowiki>#</nowiki>
:If your fragmention text contains a literal "#" e.g. "Use my #hashtag", you MUST URL-escape it, e.g. "<nowiki>Use+my+%23hashtag</nowiki>".

== Processing Model ==
To process a fragmention, we don't need a big change to the HTML spec. The [https://html.spec.whatwg.org/multipage/browsing-the-web.html#scroll-to-fragid HTML 5 §7.8.9 Navigating to a fragment] section has a subsection [https://html.spec.whatwg.org/multipage/browsing-the-web.html#find-a-potential-indicated-element find a potential indicated element] as follows:
<blockquote>
<p>To <dfn id="find-a-potential-indicated-element">find a potential indicated element</dfn> given a string <var>fragment</var>, run these
  steps:</p>
<ol><li><p>If there is an element <a href="https://dom.spec.whatwg.org/#in-a-document-tree" id="scroll-to-fragid:in-a-document-tree" data-x-internal="in-a-document-tree">in the document tree</a> that has an <a href="https://dom.spec.whatwg.org/#concept-id" id="scroll-to-fragid:concept-id-2" data-x-internal="concept-id">ID</a> equal to <var>fragment</var>, then return the first such element in <a id="scroll-to-fragid:tree-order" href="https://dom.spec.whatwg.org/#concept-tree-order" data-x-internal="tree-order">tree order</a>.</p></li><li><p>If there is an <code id="scroll-to-fragid:the-a-element"><a href="text-level-semantics.html#the-a-element">a</a></code> element <a href="https://dom.spec.whatwg.org/#in-a-document-tree" id="scroll-to-fragid:in-a-document-tree-2" data-x-internal="in-a-document-tree">in the document
   tree</a> that has a <code id="scroll-to-fragid:attr-a-name"><a href="obsolete.html#attr-a-name">name</a></code> attribute whose value is equal to
   <var>fragment</var>, then return the first such element in <a id="scroll-to-fragid:tree-order-2" href="https://dom.spec.whatwg.org/#concept-tree-order" data-x-internal="tree-order">tree order</a>.</p></li><li><p>Return null.</p></li></ol>
</blockquote>

We propose amending this to add a 3rd step after the existing id and name searching so it reads as follows:

<blockquote>
<p>To <dfn id="find-a-potential-indicated-element">find a potential indicated element</dfn> given a string <var>fragment</var>, run these
  steps:</p>
<ol><li><p>If there is an element <a href="https://dom.spec.whatwg.org/#in-a-document-tree" id="scroll-to-fragid:in-a-document-tree" data-x-internal="in-a-document-tree">in the document tree</a> that has an <a href="https://dom.spec.whatwg.org/#concept-id" id="scroll-to-fragid:concept-id-2" data-x-internal="concept-id">ID</a> equal to <var>fragment</var>, then return the first such element in <a id="scroll-to-fragid:tree-order" href="https://dom.spec.whatwg.org/#concept-tree-order" data-x-internal="tree-order">tree order</a>.</p></li><li><p>If there is an <code id="scroll-to-fragid:the-a-element"><a href="text-level-semantics.html#the-a-element">a</a></code> element <a href="https://dom.spec.whatwg.org/#in-a-document-tree" id="scroll-to-fragid:in-a-document-tree-2" data-x-internal="in-a-document-tree">in the document
   tree</a> that has a <code id="scroll-to-fragid:attr-a-name"><a href="obsolete.html#attr-a-name">name</a></code> attribute whose value is equal to
   <var>fragment</var>, then return the first such element in <a id="scroll-to-fragid:tree-order-2" href="https://dom.spec.whatwg.org/#concept-tree-order" data-x-internal="tree-order">tree order</a>.</p></li>
<li><p>Search through the plain [https://html.spec.whatwg.org/multipage/dom.html#text-content text content] of the document tree for contiguous text that matches the <var>fragment</var> with white space collapsing. If there is a match, return the outer element that contains the text completely. </p></li><li><p>Return null.</p></li></ol>
</blockquote>

== Open Source ==
* [https://github.com/chapmanu/fragmentions client-side script] and 
* [https://chrome.google.com/webstore/detail/fragmentions/pgajkeekgcmgglngchhmcmnkffnhihck Chrome extension] 
* [https://github.com/idno/idno/commit/04f79c792d07dc14f8f32b320c9ec39427f06a09 idno adds support] thanks to [http://werd.io/ Ben Werdmüller]
* A [https://christiaanconover.com/code/wp-fragmention wordpress plugin] to add fragmentions by [https://christiaanconover.com/ Christiaan Conover]
* [https://drupal.org/sandbox/ocean/2247743 A drupal plugin] by Drew Robinson
* [https://github.com/goblindegook/Fragmentions/ another wordpress plugin] by Luís R.
* [http://disquotational.appspot.com/ Disquotational] is a web service (and bookmarklet) for making fragmention links by [http://www.purelytheoretical.com/ Darryl McAdams]
* [https://github.com/myfreeweb/indieweb-components fragmention-target] is a Web Component for displaying fragmention links - the paragraph and the highlighted text.


== IndieWeb Examples ==
<span id="Implementations">Implementations</span> on IndieWeb sites.
* [http://www.kevinmarks.com/fragmentions.html initial discussion] and [http://www.kevinmarks.com/poemfragmentions.html follow-up] explaining the idea more generally
* [http://sandbox.thewikies.com/fragmentions/example.html##individual+words+and+phrases Jonathan's example page] 
* [http://www.kevinmarks.com/w3cannotation.html##most+robust+reference Kevin's original page with Jonathan's script added]
* [http://aaronparecki.com/articles/2014/03/23/1/posting-photos-on-my-own-site##start+using+this Aaron's site] - note the custom CSS for the highlighted paragraph
* [http://shakespeare.sayit.mysociety.org/much-ado-about-nothing/act-iv/scene-i-a-church##link+my+dear+friend sayit.mysociety.org], thanks to Matthew Somerville. Shakespeare, government inquiries, and any other transcripts - [http://sayit.mysociety.org/ more information]
* [http://blog.vrypan.net/2014/04/22/fragmentions/##inside+the+page Panayotis Vryonis' personal blog]
* [http://indiewebcamp.com/fragmention##this+wiki this wiki] itself! Thanks [http://aaronparecki.com/ Aaron]

* [http://nerd.vasilis.nl/linking-fragments-page/##a+few+lines+of+CSS Styled with a tiny CSS animation] by Vasilis van Gemert
* {{kartik}} supports fragmention on all pages on kartikprabhu.com using CSS to highlight the referred paragraph in gray. Also, selecting text gives a popup link with the corresponding fragmention using [https://github.com/kartikprabhu/fragmentioner fragmentioner].

* {{t}} supports fragmentions on all tantek.com post permalinks [http://tantek.com/2014/207/t1/iteration-tech-proposals-cc0-wiki-preferred since 2014-07-26] using the <code>fragmention.min.js</code> open source polyfill, and CSS that highlights the element containing the fragmention in <span style="background:yellow">yellow</span> and fades to <span style="background:#ffffe0">very light yellow</span>.

* [http://ben.thatmustbe.me/##Archives Ben's Site] - simple use of the open source polyfill, included on every page.

* {{bret}} supports fragmentions and animated background highlighting on the upcoming [https://github.com/bcomnes/base base] jekyll boilerplate site.  [http://bret.io/base/2014/11/01/photo-article/##article example]

* {{chrisaldrich}} supports fragmentions on [http://boffosocko.com/about/website-philosophy-structure/#I+try+to+follow http://boffosocko.com] since [http://boffosocko.com/2015/07/21/boffosocko-com-now-supports-fragmentions/ 7/21/15]. For [https://hyp.is/W0KbHmtfEeaEl_cs7CftkQ/boffosocko.com/about/website-philosophy-structure/ comparison] it also supports [[Hypothes.is]] [[annotation]]s and [[highlight]]s as of [http://boffosocko.com/2016/04/03/boffo-socko-now-supports-hypothes-is-annotations/ 4/3/16]. On [http://boffosocko.com/2018/01/23/fragmentions-for-better-highlighting-and-direct-references-the-web/ 2018-01-23] he also added support for {{kartik}}'s [[fragmentioner]] to make highlighting portions of his site simpler for users.

== Silo Examples ==
* [http://epeus.blogspot.com/2003/02/googles-origins-hint-about-blogger.html##for+annotation Kevin's blogger blog] by adding the fragmention JS to the template
* [http://bthdonohue.com/post/85643490431/instapaper-fragmentions Instapaper Support](original post is unavailable as of 2016-12-21; [https://web-beta.archive.org/web/20160324083325/http://bthdonohue.com/post/85643490431/instapaper-fragmentions Archived link at archive.org])
** creates fragmention URLs for highlights and POSSEs them to twitter, tumblr, facebook etc. 
** Adds fragmention support to the Instapaper browser plugins for Chrome and Safari
* [https://opensource.google.com/docs/releasing/#process+for+releasing Google's "Open Source" website] supports fragmentions as of 2017-03-30

== UI for Fragmention-generation ==
Examples of user-interfaces for generating a fragmention from some selected text

* [https://github.com/kartikprabhu/fragmentioner fragmentioner] by {{kartik}} is a [[Javascript]] utility which gives a pop-up link with the fragmention URL to a piece of selected text.

* {{adactio}} on [https://resilientwebdesign.com/ Resilient Web Design] updates the URL in the browser with the fragmention when some text is selected using [[Javascript]].

== Challenges ==
While most find the idea of fragmentions delightful, there are differing ideas on how they should work. We ask contributors to justify feature requests with concrete real world examples, as tests in the wild may reveal best practices. Otherwise, any of these challenges could be appended with, ''“So, uh, what do you think?”''

=== rejected double-hash URL style ===
The first draft of this used double hash anchors <code>##</code> and escaped the spaces in the fragment with <code>+</code> signs. Experimentation shows that this causes problems with URL parsing in some cases as double-hash is an invalid URL, and plus signs in fragments are not escaped as spaces, only in the query string. 

As id's and anchors are not able to contain spaces, this extra markup is unnecessary.

The [http://tools.ietf.org/html/rfc3986#appendix-A URL spec] doesn't define fragments to contain hash signs, so links like <nowiki><a href="##foo"></nowiki> may fail validation, or be misparsed by strict URL parsers. if this is an issue, we may need to switch to #*
: For future reference. Valid characters as per URL spec are: <nowiki>ALPHA / DIGIT / "-" / "." / "_" / "~" / "%" HEXDIG HEXDIG / "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "=" / ":" / "@" / "/" / "?" </nowiki> -[[User:Sandeep.io|Sandeep.io]] 20:58, 23 April 2014 (PDT)
On the other hand, [http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-id-attribute HTML5 id's] can contain #. So browsers may interpret links like <nowiki><a href="##foo"></nowiki> with two meanings - the question is if IDs starting with # occur on the web. 

The initial feedback is that few people concern themselves with hash fragment validation, and even less would (at least, knowingly) use them in this way.


Further thought: as HTML5 ids can contain any text except a space character, any fragment with a space in CANNOT refer to an id, so could be treated as a fragmention. So any fragmention of more than one word may not even need the ##.

: The problem with this approach is that auto-linkers and URLs in other context (like plain text) don't know where the URL ends. -[[User:Sandeep.io|Sandeep.io]] 20:56, 23 April 2014 (PDT)


Firefox drops the first # on redirect: For instance http://kartikprabhu.com/static/demo/fragmention.html##was+still  redirects to an https version which should be https://kartikprabhu.com/static/demo/fragmention.html##was+still but Firefox drops one of the # to give https://kartikprabhu.com/static/demo/fragmention.html#was+still . Strangely enough http://kartikprabhu.com/static/demo/fragmention.html###was+still fixes this (Firefox only drops one #) and http://kartikprabhu.com/static/demo/fragmention.html#%23was+still also seems to work.

=== Sensitivity ===
After trying it both ways, collapsing white space works better, as it is very hard to generate invisible escaped characters accurately.

Matching case is strict, but makes it easier to target specific text. Ignoring case is cavalier, but makes it easier to target anything.

The initial feedback is conflicting. Some expected fuzzy matching. Others expected specific matching. Most agreed that it depends on your specific use-cases, which are sorely lacking in most of the annotations discussions. Fuzzy matching could be seen as a further fallback strategy if direct matching fails.


=== Icon proposals ===
(Todo: upload images instead of linking.)
* [[File:highlink.svg]] This proposed icon combines highlighting with linking and is thus a classic over-literal design by an engineer. Graphic designers very much encouraged to come up with something better. 
* [https://kartikprabhu.com/static/icons/link-frag2.png Part-highlighted link icon]
* [http://test.colintedford.com/s/2014/fragicon.html Quotation mark + link icon] (rough draft - may try fusing per suggestion)

Check out the NounProject searches for [http://thenounproject.com/search/?q=link link] and [http://thenounproject.com/search/?q=text text] for some ideas.

=== Using Fragmentions in a TOC ===
Because Fragmentions by default link to the first occurrence of a phrase, it's not possible to use them in a table of contents on the same page if the table of contents appears above the things you're linking to. This is because the fragmentions would then link to themselves.

=== What if the linked-to text occurs more than once? ===

In [[User:Kevinmarks.com|Kevin Marks]]' [http://www.kevinmarks.com/poemfragmentions.html##What+if+the+linked-to+text+occurs+more+than+once follow-up post], he suggests using more words to create a unique reference, rather than trying to find a technical solution to the problem. 

Proposed solution to reference the nth occurrence of a phrase:

* https://kartikprabhu.com/static/demo/fragmention.html##was+still
* https://kartikprabhu.com/static/demo/fragmention.html##was+still++2
* https://kartikprabhu.com/static/demo/fragmention.html##was+still++-1

=== What if the desired fragment isn't text? ===

Say you wanted to link to a particular photo on an album page, or a video inside a blog post.

While they fail the "human-readable" test, CSS selectors and XPath work for targeting arbitrary elements on a page, and browser devtools already generate them by right-clicking an element inside the Inspect view.

JavaScript can easily slurp up the selectors and run <code>document.querySelector()</code>/<code>document.evaluate()</code>, then apply highlighting.

The problem is they look like this:

* <code>#post>article:nth-child(7)>div.caption>blockquote>blockquote>p:nth-child(3)</code> (CSS)
* <code>//*[@id="post"]/article[4]/div[2]/blockquote/blockquote/p[2]</code> (XPath)

Use of <code>id</code>s does shorten the chain tremendously, but even in the best circumstances you're going to have 'some' naked syntax if the straight <code>id</code> isn't what you're selecting.

The other problem is that selectors are fragile, but then so are normal fragments.

CSS selectors have deeper browser support and more widespread dev knowledge, but it's easy to support both; just check for <code>//</code> at the start. Supporting CSS selectors along with the plaintext fragment quotes is more difficult; some short English snippets could very well be valid CSS selectors, even if they aren't likely to match anything real.

SVG allows arbitrary fragments with a <code>#viewBox(x<sub>1</sub>,y<sub>1</sub>,x<sub>2</sub>,y<sub>2</sub>)</code> syntax, so a sister <code>#select()</code> method could be an option.

=== Generating fragmention from a selection across multiple elements ===
What is the expectation from a [[fragmention#UI_for_Fragmention-generation|fragmention-generating UI]] when the selected text is across mulitple elements? Examples:

* this fragmention https://kartikprabhu.com/static/demo/fragmention.html#he%20looked.%20%22What%27s%20happened%20to%20me?%22 across the first 2 paragraphs is clearly useless as it picks the whole document

* this fragmention https://kartikprabhu.com/static/demo/fragmention.html#UTF%20non-breaking%20space%20in which crosses across a <code>&lt;strong&gt;</code> element is clearly useful

{{sknebel}}: The first example would work better if the algorithm selected not the closest surrounding element, but only those children of the closest surrounding element that contain parts of the selected text (=the first two paragraphs). I think the second would behave the same. [[https://chat.indieweb.org/2016-12-21/1482310222531000 via IRC]]

{{kartik}}: The current implementation only selects one element similar to URL fragments. Whether it should be more flexible about this is a good question.

=== Should an element selected by fragmentioned URL be focussed? ===

{{kartik}}: AFAIK for usual fragment URLs the browser will put the focus on the element selected so that tabbing works nicely. Should fragmention implementations do the same?

== Related work ==
A related idea is currently implemented as an experimental feature in Chrome 74.0.3706.0. [https://github.com/bokand/ScrollToTextFragment Github issue].

The NY Times has [http://open.blogs.nytimes.com/2011/01/11/emphasis-update-and-source/ a tool for annotating articles], but it makes a very complex anchor and requires a very specific algorithm. [https://github.com/NYTimes/Emphasis source here]

There is a w3c spec for addressing [http://www.w3.org/TR/media-frags Media Fragments] but it explicitly excludes HTML.

[http://www.pullquote.com/ Pullquote] generates images to embed longer quotes in twitter. Getting it to generate fragmentions would be an excellent enhancement.

"Purple numbers" (per paragraph anchor tags) have been a feature of many blogs, for example [http://scripting.com/2014/02/23/designChallengeParagraphlevelPermalinks.html#aNTTPH Dave Winer's] and [http://www.tbray.org/ongoing/When/200x/2004/05/31/PurpleAgain#p-5 Tim Bray's Ongoing] but they do need to be added by the authoring software. Fragmentions can be chosen independently of authorship. Or a client-side script could generate them per-paragraph.

[http://www.savepublishing.com/ Save Publishing] a bookmarklet by [http://www.ftrain.com/ Paul Ford] that highlights tweetable sentences, could be enhanced by fragmentions.

[http://documentation.superfeedr.com/subscribers.html#htmlfragments SuperFeedr] allows subscribing to HTML fragments - enhancing this with fragmentions could be interesting.

[http://www.gerv.net/software/fragment-search/ Fragment Search] by [http://blog.gerv.net/2007/02/fragment_search/ Gervase Markham] in 2007 is  the same idea, with a more complex syntax #!s!search%20term and #!s3!search%20term for 3rd occurrence.

[http://zesty.ca/crit/draft-yee-url-textsearch-00.txt Text-Search Fragment Identifiers] E.g., <nowiki>http://example.com/index.html#:words:(distinguish)</nowiki> and <nowiki>http://example.com/index.html#:words:serve-as-context-to-(distinguish)</nowiki> and <nowiki>http://example.com/index.html#:words:context-to-(distinguish)-multiple-occurrences</nowiki>

[http://dret.net/netdret/docs/wilde-ht2005-textfrag.pdf Fragment Identiﬁers for Plain Text Files] E.g., <nowiki>http://example.com/text.txt#line=10,20</nowiki> and <nowiki>http://example.com/text.txt#match=[rR][fF][cC]</nowiki>

[http://internet-apps.blogspot.in/2007/11/using-urls-to-pass-parameters-to-web.html Using URLs to pass parameters to web applications, widgets and gadgets] proposes #meta(). E.g., <nowiki>http://www.google.com/reader#meta(width=900,height=500,autohide,position=top)</nowiki>

[https://github.com/mhausenblas/addrable Addrable] E.g., table1.csv#where:city=Berlin,person=Richard

[https://hypothes.is/blog/fuzzy-anchoring/ Hypothes.is fuzzy anchors] and [https://github.com/hypothesis/h/wiki/robust-anchors robust anchors] have some good discussion of the broader area, and some code too. In April 2016, Hypothes.is also provided the ability to create [https://hypothes.is/blog/direct-linking/ direct links] either with their browser extension enabled or via a proxy.

[https://medium.com/@bbirdiman/lets-please-use-hashtag-terms-to-create-_arbitrary_-deep-links-f9185d5da2f0 Bowerbird proposed # for words in december 2013]

See also: http://en.wikipedia.org/wiki/Fragment_identifier#Proposals

[http://www.businessinsider.com/the-inside-story-of-how-rap-genius-fired-a-cofounder--and-just-raised-40-million-annotated-2014-7#annotations/3411037 RapGenius now offers a highlight and annotate plugin] as seen here on Business Insider. They highlight phrases, not paragraphs

The Guardian has [https://twitter.com/wblau/status/529713139961827329 a way to tweet the selection]

W3C annotations selectors have proposed ways of [https://www.w3.org/TR/2017/NOTE-selectors-states-20170223/#frags being encoded in fragments]

== Brainstorming ==
=== User friendly name ===
tl;dr: we need a user friendly name for fragmentions (which sounds like a jargon term).

The term "fragmention" is great for describing the plumbing of the extension of URL fragment syntax to handle space separated text to link to the first instance of that text, however a typical web user will be unlikely to understand what it refers to.

This brainstorm is for coming up with more user-friendly names/phrases to consider using for a URL that includes a fragmention
* "annotation link" - [[annotation]] is a typical use-case of a fragmention, yet even the term annotation is both overloaded, and a bit abstract.
** The abstraction here is fine, imo. Annotations are general-purpose enough of a concept for this to be fine. -- {{JackyAlcine}}, 2018-05-08
* "quote link" or "quotation link" - linking to a specific [[quotation]] of text by including it in a fragmention is another good use-case and possibly another way to refer to it in a way that makes sense, e.g.: It's a ''link'' that ''quotes'' some text from the page.
* "highlight link" (verb: highlight linking), "highlighting link" or "highlighting URL" abstracts a level further than quote link, as the snippet featured may not always be a "traditional" [[quote]]. These also come closer to the simplest version of what is actually being implemented from a user's visual perspective. (Compare also with older implementations of anchor links, which are infrequently used in practice and generally not in the vernacular from a broad web user's perspective and would most often simply be called "links" instead.)
* ... others?

=== Alternatives ===
* Alternative proposal: use quoted string literals. Example: <nowiki>http://example.com/index.html#"string to search"</nowiki>. &mdash;[[User:Sandeep.io|Sandeep.io]] 20:11, 23 April 2014 (PDT)
**On thinking about this a little, it doesn't sound like a good idea (for various reasons including the fact that the href attribute is quote delimited), but I like conveying the idea of "search for string literal" &mdash;[[User:Sandeep.io|Sandeep.io]] 20:30, 23 April 2014 (PDT)
* [http://betterlink.io/posts/better-fragmention.html Betterlink] is a proprietary alternative that doesn't like [http://betterlink.io/posts/better-fragmention.html##Not+Targeting+the+Selection not highlighting the selection] and a [http://betterlink.io/posts/better-fragmention.html##Not+All+Browsers bug report about browser variations]
** As far as I can see, all these 'objections' are of fragmention.js (the particular javascript polyfill) and not of fragmention (the idea of using text with ## to link to arbitrary phrases); which is a better linking method than Betterlink's confounding URLs e.g. http://epeus.blogspot.com/2003/02/googles-origins-hint-about-blogger.html?bl-sid=97  -- [[User:Kartikprabhu.com|Kartik]] - 2014-07-13

== Articles ==
* 2018-03-28 {{kaushalmodi}} [https://scripter.co/fragmentions/ Fragmentions]
* 2018-01-23 {{chrisaldrich}} [https://boffosocko.com/2018/01/23/fragmentions-for-better-highlighting-and-direct-references-the-web/ Fragmentions for Better Highlighting and Direct References on the Web]
* 2015-07-21 {{chrisaldrich}} [https://boffosocko.com/2015/07/21/boffosocko-com-now-supports-fragmentions/ BoffoSocko.com Now Supports Fragmentions!]
* 2014-04-17 {{kevinmarks}} [http://www.kevinmarks.com/fragmentions.html Fragmentions - linking to any text]
* ... add more

== See Also ==
* [[fragmentioner]]
* [[marginalia]]
* [[comments]]
* [[interactions]]
* [[highlight]]
* An [https://w3c.github.io/web-annotation/selector-note/#frags alternative to fragmentions] are part of the Web Annotation spec, these have a [https://addons.mozilla.org/en-US/firefox/addon/precise-links/ browser add-on implementation, for Firefox in particular]
* 2011 prior related proposal and implementation for linking to text in paragraphs: https://open.blogs.nytimes.com/2011/01/11/emphasis-update-and-source/
