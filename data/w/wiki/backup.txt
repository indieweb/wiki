https://indieweb.org/wiki/backup

You can help IndieWebCamp by downloading and keeping a backup of this wiki!

As of 2017-12-01 the wiki and images are about 500mb.

IMPORTANT: Make sure you download the files to a case-sensitive filesystem (OSX and Windows are not case sensitive by default).

You can also download an archive of the chat logs via https://github.com/indieweb/indieweb-chat-archive

== Archive Methods ==

=== git ===
The wiki is [https://github.com/indieweb/wiki/commits/master synced to github.com] every 5 minutes. The export generated for the rsync method is committed to git at regular intervals.

<code>git clone https://github.com/indieweb/wiki.git</code>

<table><tr><td width="50%">
==== Pros ====
* Supports incremental additions and deletions
* Git repo stores full history of changed and deleted files
* Will properly delete local files when the remote files are deleted
* Does not require a password
* Fast
</td><td>
==== Cons ====
* Requires the server to take another step after exporting the wiki to text files, potentially more prone to errors
</td></tr></table>

----

=== rsync ===
<code>rsync -avz --delete --stats rsync://indieweb@indieweb.org/indiewebcamp_wiki indiewebcamp</code>

<table><tr><td width="50%">
==== Pros ====
* Supports incremental changes
* Will properly delete local files when the remote files are deleted
* fast: ~10 minutes for a complete mirror, seconds for incremental update
</td><td>

==== Cons ====
* Requires a password
* Requires running a separate publicly-accessible daemon on the server
</td></tr></table>

if you do this automatically, e.g. in a cron job, you'll want to use the <code>--password-file</code> option to rsync, which expects a file with just the password and chmod 600

----

=== wget ===
<code>wget --execute robots=off --no-parent --wait=1 --mirror https://indieweb.org/wiki/backup/data/</code>
<table><tr><td width="50%">
==== Pros ====
* Works over HTTP
* Supports incremental changes
</td><td>
==== Cons ====
* Local files won't be deleted when deleted on the server
* slow: as of 2017-04-09 both new mirror and updating an existing one takes >2 hours (mostly due to the 1s delay between >6000 mostly tiny files, each of which has to be touched at each update). Not a big issue if run in cron, but annoying if done manually.
</td></tr></table>

__NOTOC__
