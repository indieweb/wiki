https://indieweb.org/wiki-projects

{{stub}}

'''<dfn>wiki projects</dfn>''' are IndieWeb [[projects]] related to [[wiki-page]] hosting/creation/editing on your own site.

== Why ==
You can use a wiki project (or service!) to create, host, and edit [[page]]s on your personal site!

Pages are very different from [[posts]] in that they have more of a focus on timelessness, or rather a topic over time, and set an expectation of being edited and updated as often as the author wants, and usually providing a browsable revision history. Whereas posts are typically a snapshot of thoughts published at a moment in time, and set an expectation of being rarely edited, perhaps only for minor corrections and links to responses, with rarely any revision history.

Because of this difference in focus, software and services for wiki editing are designed and optimized differently than a typical post-centric [[CMS]] (even typical [[SSG]]s), and thus are worth exploring if you want to maintain timeless [[page]]s on your site.

== Existing Projects ==
=== Smallest Federated Wiki ===
{{main|Smallest Federated Wiki}}
Smallest Federated Wiki was conceived/created/developed/launched at IndieWebCamp [[2011]]

=== MediaWiki ===
{{main|MediaWiki}}
MediaWiki runs indiewebcamp.com, microformats.org/wiki, and is used by IndieWebCamp community members like [[User:Tommorris.org|Tom Morris]] on http://wiki.tommorris.org/

=== ikiwiki ===
{{main|ikiwiki}}
ikiwiki is another independent site wiki, and is used by IndieWebCamp community members like [[User:greptilian.com|Philip Durbin]] on http://wiki.greptilian.com/

=== TiddlyWiki ===
{{main|TiddlyWiki}}
TiddlyWiki is another independent site wiki that can be self-hosted and used as a personal website. See [[TiddlyWiki]] for examples.

=== WikiSuite ===
* [[WikiSuite]] â€” no known IndieWeb community users

=== Wikijs ===
{{main|Wiki.js}}
* [https://js.wiki/ Wiki.js] - no known IndieWeb community users

=== Massive Wiki ===
{{main|Massive Wiki}}

=== Project Comparison Sites ===
* [https://www.wikimatrix.org/ WikiMatrix] - compare the features of various wiki options
* [https://en.wikipedia.org/wiki/List_of_wiki_software List of wiki software] - list from Wikipedia
* [https://en.wikipedia.org/wiki/Comparison_of_wiki_software Comparison of wiki software] - comparison tables on Wikipedia

=== GitHub-backed wiki ===

* {{capjamesg}} uses GitHub as an editing interface for [[pages]] on his website, like /fonts and /movies. He has a bookmarklet that, when clicked, opens the corresponding file in the GitHub editor.
** The bookmarklet also takes James to a page creation page if he is viewing a page that returns a 404. This means he can both create new and edit existing pages with the same bookmarklet.
** The code is documented in https://jamesg.blog/2025/02/16/my-static-site-editing-bookmarklet.
** This approach allows James to benefit from all of the features of Git/GitHub (version control, GitHub Actions for building his site) without having to design a whole new experience for wiki editing.

== Brainstorming ==
Thoughts on how an IndieWeb wiki could be implemented

=== Features for migrating from PBWiki ===
There was a discussion on 2021-253 in chat between {{t}} & {{snarfed}} about wiki / topic / evergreen pages on a personal site (in particular, prompted by {{snarfed}} asking {{t}} how his own personal wiki implementation was going as a follow-up from citing his PBWorks wiki), and which features were important / interesting.
Needs extraction from logs at:
* https://chat.indieweb.org/2021-09-10#t1631298427718000 and rest of day
* https://chat.indieweb.org/dev/2021-09-10#t1631302774228600 and rest of day

=== Static Pages Plus HTTP Headers ===
This is a brainstorm by {{t}}, originally discussed in [[IRC]] 2013-091, captured here for potential iteration.<blockquote>[1:21pm] tantek: I'm actually thinking of, how do I just use a static HTML page itself as the storage for a "wiki" page.</blockquote>

* static HTML files as their own storage of their current/latest version
* previous versions stored elsewhere (e.g. the filesystem)
** use a h-feed to list keep track of previous versions so that one can easily subscribe to changes made
** date-time-stamp filename suffixing convention
*** this places a content requirement on the otherwise unrestricted HTML files. 
*** alternatively if this information (what is the previous version) is kept in a database cache, it can be sent with the server as an HTTP LINK Header with rel value.
** the combination would satisfy essential qualities 2,3,4 listed above.
** new link rel to link to the previous [http://microformats.org/wiki/version#brainstorming historical version]
** each version linking explicitly (via invisible <code>&lt;link></code> or visible hyperlink) to the previous version, and [http://microformats.org/wiki/version#current current version].
** security: as always, when using HTML files for static storage, one must ensure that their project is not vulnerable to directory traversal where a malicious actor can use manipulated URLs to access private content.
* for editability, it might be a neat trick to write software that made any static HTML page on your site automatically "editable" if you happened to be signed in with [[Web Sign-in]] / [[IndieAuth]].
** similar to revisions/versions, a page could link to its editing interface/version/query parameter with a rel link as well, e.g. rel=edit, which has been previously proposed as part of [http://universaleditbutton.org/Suggestions#JavaScript_links_for_AJAX-driven_edits Universal Edit Button: links for AJAX-driven edits] but could be used for server-based editing state as well. E.g. <code>href="?edit=1"</code>. Again this might be best sent as an HTTP Link Header.
** goal: make a page editable without putting any meta/link in the page itself.
*** should be possible to use HTTP LINK rel=edit to an editing script (for browser plugin discovery)
*** perhaps an HTTP LINK rel=script to execute an editing script (for browsers that don't know about rel=edit).

Interface - there are many ways personal wiki software could provide editing / version browsing features, here are a few:

UI for browsing previous versions:
* slider in Etherpad
* what archive.org puts up in the header on archived page results
* That ins/del [http://codepen.io/barnabywalters/pen/nhmuw slider demo] I made may be of interest/use --[[User:Waterpigs.co.uk|Waterpigs.co.uk]] 06:40, 2 April 2013 (PDT)

Brainstorm summary:
# static HTML page as its own storage
# *-date-time suffixed versions of said page in the file system (or perhaps in the YYYY/ directories), linking to latest version and previous versions with rel values
# HTTP LINK headers for browser-editing-plugin discovery and javascript-based fallback
# Access UIs via query parameters e.g. ?edit=1, ?history

Related project:
* http://microformats.org/wiki/version - for new link rels for the previous version/revision and the current/latest version.

=== Features for a personal wiki ===

There was a discussion in chat about what features a "personal wiki" should have. A personal wiki is a wiki written by one person for themselves or for a select audience. A select audience may be enabled to read the wiki using capability URLs or by signing in to view specific pages.

==== {{capjamesg}}'s brainstorm ====

James likes the idea of having a personal wiki for documenting his thoughts on concepts as opposed to writing full blog posts on a particular topic. For instance, James might want to create stubs for topics he is thinking about and add links, quotes, and notes as he learns more about the topic. This would create a useful point of reference for a particular topic.

James is interested in a personal wiki separate from his site. This would help achieve a clear context separation between long-form and short-form content. With that said, the nature of a personal wiki is to serve one's self: it is a personal wiki. Thus, a self-hosted, private wiki may be preferable.

The key features such a wiki would need are:

* create a post
* update a post
* delete a post
* search through posts
* view revisions to posts
* find recently updated pages

== Others ==
Other projects that may be of help with designing/creating/building a wiki content system.

* [http://www.mementoweb.org/  MementoWeb]
** -1 memento seems horribly overdesigned, e.g. has way too many rels, none of them actually useful: original, timegate, timemap. - [[User:Tantek.com|Tantek]] 16:49, 1 April 2013 (PDT)

== See Also ==
* [[wiki]]
* [[wiki-page]]
* [[edit]]
* [[projects]]
* Use-case: sharing & finding actually useful text restaurant menus instead of spam links to online ordering intermediaries (Google Maps), or at best out of date PDFs. How to: Create a wiki page on your personal site with name-of-restaurant-city-menu and simple semantic HTML table(s) with the menu items, name, description, price, etc. extra points for including an h-card of the restaurant at the top
