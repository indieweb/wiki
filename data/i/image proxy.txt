https://indieweb.org/image_proxy

{{stub}}

An <dfn>image proxy</dfn> is a service that fetches and re-serves images from a new URL, used by IndieWeb sites to provide better performance, fidelity, and/or reliability of images embedded in posts.

== Why ==
Image proxies can help website performance, customize images for their page context, and improve image viewing reliability with the following techniques:
* resizing, reformatting, cropping, filtering or otherwise modifying images before serving inside a page
* avoiding mixed content warnings when serving images from other sites
* caching content that may disappear in the future

== IndieWeb Examples ==
* {{barryf}} has [https://barryfrost.com/2015/01/i-ve-just-set-up-ssl implemented camo] on his website to proxy external images to https
* {{willnorris}} wrote and runs a [https://willnorris.com/2014/01/a-self-hosted-alternative-to-jetpacks-photon-service go image proxy], primarily for dynamic resizing.
* {{kylewm}}'s [[Red Wind]] has an in-built imageproxy that proxies and resizes images. Requests include a signature to prevent external use.
* {{martymcguire}} uses [https://github.com/willnorris/imageproxy willnorris' imageproxy] for media on his personal notes site, [[Cloudinary]] for media and as a thumbnail cache for author images on his personal site.
* {{snarfed}} uses [https://www.cloudimage.io/ cloudimage.io] on [https://facebook-atom.appspot.com/ facebook-atom] and [https://instagram-atom.appspot.com/ instagram-atom].

== Open Source ==
* Go: https://willnorris.com/go/imageproxy
* Python: https://github.com/agschwender/pilbox
Archived:
* Node.js: https://github.com/atmos/camo

== Brainstorming ==

=== Considerations for building an image proxy ===

==== {{capjamesg}} ====

{{capjamesg}} is experimenting with image layouts in his web reader, [[Artemis]].

When a request is made to the image proxy, Artemis first checks if the user making the request is signed in. This ensures only users can use the proxy.

Next, Artemis checks if the URL the proxy is requesting is in a post in his web reader. If it is, then the request will be made. This prevents users from using the proxy arbitrarily.

Then:

* A HEAD request is made to check for the Content-Length header.
* If an image is more than a few MB according to the Content-Length, the request is not fulfilled.
** TODO: Add a proper timeout mechanism.
* If an image doesn't have an image Content-Type, the request is not fulfilled.

One direction James wants to explore is whether there is a means by which to prevent a request unless it is made from a particular origin. James hasn't read into this yet.

== See Also ==
* [[video proxy]]
* Brainstorming: strip EXIF (in particular lat long) for privacy reasons
* example use for webmention avatars [https://www.zachleat.com/web/back-to-the-facepile/ Back to the Facepile, Featherweight Edition]
