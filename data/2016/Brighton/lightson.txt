https://indieweb.org/2016/Brighton/lightson

'''<dfn>Keeping the lights on</dfn>''' was a session at [[2016/Brighton|IndieWebCamp Brighton 2016]].

Notes archived from: https://etherpad.indieweb.org/lightson
----
IndieWebCamp Brighton 2016
Session: Keeping the lights on

#lightson

Brainstorming about sustainable and reliable 'computational infrastructure' for IndieWeb sites

Thinking about users with no 'web skills' and no interest in/time for the technical details involved in using and keep running IndieWeb sites and related infrastructure (handling webmentions, comments, etc.)

Part of the attractiveness of GAFAM platforms and other proprietary platforms/walled gardens is their (overall) reliability, even at the high price of trading privacy for it.

Hosted IndieWeb services (brid.gy, Known, various hosted publishing platforms, etc.) partially help. But what about being entirely independent from external services?
Or what to do when a hosted service, even when they allow to easily export personal content and metadata, shut down?
Like having access to software source code is of very little direct use to users who cannot inspect or change it, a dump of personal content can be of very limited use to non-tech savvy users.

There are at least two dimensions to 'keeping the lights on':
    
* reliable, non-proprietary, easily re-deployable, inspectable, etc. infrastructure (i.e. appropriating at a small, indie scale the benefits of computational management of infrastructure that makes GAFAM&others so efficient at managing things at a huge scale: self-hosted) cloud computing; devops; browser as a (computational) platform; mobile 'general-purpose' computation devices...
* strategies for peer help - e.g. an IndieWeb 'family champion' able to do lightweight support and maintenance for family members, friends, etc. (i call these 'computational mediators' [1])
    
    

== Participants ==
* hotzeplotz (leading)
* martijn
* erik Erskine

== Notes ==
Convenience thing, right now the people are the creators of the IndieWeb themselves. What you should want is make it convenient enough to have other people only use it, not create it.
There is (With) Known which offers a ready mae CMS/Blogging package with IndieWeb integration that could be as easy to set-up as any other WordPress blog.
An issue is the expectation of free services, so what if the average user will have to pay? Maybe not to have people pay for the service, but pay for the support they are getting. How do you tell someone they should pay for a domain and hosting, if they are already using e.g. Medium for free.
And example of a service that charges for a basic (often free) service would be Posteo.de.
What would an IndieHoster be able to charge for their services?  [pay as much as you want ?]

Known would let you create profiles for your entire family/close friends for the same cost as for one, if you want to be hosted by them.

People recognise the value in owning a domain name (see people who buy domain names for their WordPress / Blogger / Tumblr / etc. blogs). How do you help people at registering a domain name? (Does anyone help you manage your domain? WordPress.com?)

People already no longer need the “geeky relative” to fix things. Instead they just buy a tablet or phone and can set it up themselves.

Read terrifying things about what Facebook is doing, but how do I move out of Facebook? What path do I walk? And what is the path of least resistence.

Professionalisation for family support: the “geeky relative” can offer a way to their family and friends to leave the silos. One way might be running and supporting a core Known set-up, with users set-up for family members they want to offer support to. That would lead to a lot of small islands that can still communicate without problem through the IndieWeb tech stack.

Instead of making things that “works for us”, we also need to build what “works for them”.

Better to be depending on the “geeky relative” or being reliant on a silo. Should there be a trust network of people who manage the tech?

Think about the sustainability of such a network over time. Does it beat silo’s and their [[site-deaths]]?

Bus factor  - how to deal with eg. the sudden lack of availability of the 'geeky relative' (work commitments, illness, etc.). transitive trust - give some administrative permissions to non-family geeky experts who may be trusted by the family's own 'geeky person'.

(this is somehow also connected with how to deal with one's own 'disappearance' - e.g. Google has a system in place through which users can configure what happens when one has not been logging in to any Google service for over X months/weeks - who gets contacted as a trusted person in order to be able to recover access to the ill/deceased/disappeared person's data; for IndieWeb content, one may think about agreeing things with family and friends, e.g. sharing parts of passphrases with different family members, and asking a 'geek friend' to be the 'technical executor' of a 'digital will', when given all the required parts of secret passphrases etc from different family members)

== References ==

[1] http://etheses.lse.ac.uk/3313/ (chapters 7&8)


[[Category:2016]]
[[Category:2016 sessions]]
