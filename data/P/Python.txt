https://indieweb.org/Python

'''<dfn>Python</dfn>''' is a programming language and web server runtime environment used for many IndieWeb [[projects]].

== IndieWeb Examples ==
Examples of indieweb community members who are using Python on their personal sites (alphabetical order):
=== Bear ===
[[User:bear.im|Bear's]] uses [[Kaku]], a Python based static site generator, to run his personal site  [https://bear.im/bearlog/ bearlog] and uses the following Python projects:
* [[ronkyuu]]
* [[ninka]]
* [[mf2py]]

=== capjamesg ===

{{capjamesg}} uses Python across his IndieWeb projects. His blog uses a custom-built static site generator called [https://github.com/capjamesg/letsjam letsjam]. He uses Python for his webmention receiver, Micropub endpoint, and other projects.

=== Beto Dealmeida ===

[[User:taoetc.org|Beto]] uses [[Nefelibata]], a Python based static generator to run his weblog [https://blog.taoetc.org/ Tao &c].

=== fluffy ===

{{beesbuzz.biz}} uses [[Publ CMS|Publ]], a Python based web publishing system, to run [https://beesbuzz.biz/ beesbuzz.biz].

=== Kartik Prabhu ===
[[User:kartikprabhu.com|Kartik Prabhu]]'s personal site [http://kartikprabhu.com/ Parallel Transport] runs on [[Bundle]] and uses the following Python IndieWeb projects:
* ronkyuu
* mf2py
* mf2util

=== Kyle Mahan ===
[[User:kylewm.com|Kyle Mahan]] uses [[Red Wind]] (written in Python) to run his personal site http://kylewm.com/ with the following Python projects:
* [[Flask]]
* [[mf2py]]
* [[mf2util]]

=== David Reeve ===
[[User:lancey.space|David Reeve]]'s site [http://lancey.space Lancey Space] uses [[Red Wind]] with the following Python projects:
* [[Flask]]
* [[mf2py]]
* [[mf2util]]

== Libraries == 
Generally useful libraries being developed by IndieWeb participants in Python.

* [[ronkyuu]], a collection of tools for sending webmentions and verifying rel=me.
* [https://github.com/vrypan/webmention-tools webmention-tools], utilities to send webmentions and query [[Webmention.io]]
* [https://github.com/tommorris/mf2py mf2py], a microformats2 parser 
** Bleeding-edge development currently being done on [https://github.com/KartikPrabhu/mf2py Kartik's fork]. Will be folded into the master in the future.
* [[mf2util]] is a microformats2-specific parsing utility. Useful for reading the relevant properties for comments and reply-contexts. Also has some special handling for date/times that converts them into Python datetime or date objects.
* [[ninka]] is a small library to handle indieauth endpoint discovery and auth token validation
* [[python-indieweb]] is an example Flask app that implements [[IndieAuth]], [[webmentions]], [[micropub-endpoint]] and [[token-endpoint]].
* [https://github.com/snarfed/granary granary] fetches and converts silo data ([[Facebook]], [[Flickr]], [[Google+]], [[Instagram]], and [[Twitter]] via their APIs) to/from [[ActivityStreams]], microformats2 HTML and JSON, [[Atom]], and more. Also available as a REST service.
* [https://github.com/capjamesg/indieweb-utils indieweb-utils] is a set of building blocks for implementing IndieWeb applications. indieweb-utils includes features such as a webmention discovery function, implementation of the [[Post Type Discovery]] specification, and a reply context generator.

=== Third-party Libraries ===
Non-IndieWeb-specific libraries that may still be of interest.

* [[Requests]]: By far the best way to interact with any HTML endpoint.
* [[BeautifulSoup]]: sits of top of other HTML parsing libraries (lxml or html5lib) and provides a nice interface for wading through HTML, even horribly broken HTML.
* [[Bleach]]: sanitizer and autolinker. Useful for removing dangerous code from e.g., for displaying remote content. Excludes almost everything by default.

== Projects ==
IndieWeb projects built with Python:
* [[Bridgy]] (open source) runs on Google [[AppEngine]]
** [https://github.com/snarfed/granary granary]
** [https://github.com/snarfed/oauth-dropins oauth-dropins]
** webmention-tools
** mf2py
* [[Kaku]]
* [[Red Wind]]
* [[Bundle]]
* [[Woodwind]]

== Hosting ==
Python does not have PHP's ubiquity, and finding hosting can be a little bit more of a challenge. See [[web_hosting]] for more details.

* Google [[AppEngine]] (webapp, Django)
* Webfaction
* Heroku (Flask, Django)
* VPS running a WSGI server like uWSGI or gunicorn.

[[Category:jargon]]
== See Also ==
* [[language]]
* [[projects]]
