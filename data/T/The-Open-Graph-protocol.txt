https://indieweb.org/The-Open-Graph-protocol

{{stub}}

'''<dfn>[http://ogp.me/ The Open Graph protocol]</dfn>''' (<dfn>OGP</dfn>) is an open* standard developed and controlled by [[Facebook]] for expressing the primary subject of an HTML page in custom <code>&lt;meta&gt;</code> tags for the purpose of Facebook showing [[link preview]]s; in practice only a couple are even sometimes necessary for that use-case, and you can use existing open standards instead.

<nowiki>*</nowiki>OGP is licensed using the [http://openwebfoundation.org/legal/the-0-9-agreements---necessary-claims Open Web Foundation Agreement, Version 0.9]. Though not as good as [[CC0]]+[[OWFa]] 1.0, it's still a considerably open license for a web standard written and controlled by one company.

__TOC__

== Alternative ==
Use [[microformats]] to markup the <em>visible</em> information on the page instead, which can be used for a [[link preview]] - the whole purpose of OGP.

== How To ==
To add Open Graph tags to a page, add only the tags you need, because Facebook will use other existing page markup and information in the absence of og: tags.

=== How to set title ===
If the <code><title></code> tag of your page is more than just the name of the page (i.e. includes the site name), then use <code>og:title</code> to provide only the page name:

<pre>
<meta property="og:title" content="Really Cool Blog Post" />
</pre>

=== How to set URL ===
You do not need <code>og:url</code>. Instead, use the existing [[rel=canonical]] standard to link to your canonical page URL. Facebook's own documentation states they support this [https://developers.facebook.com/docs/sharing/webmasters/crawler#canonical].

<pre><link rel="canonical" href="http://example.com/post-permalink" /></pre>

Facebook treats the following as redirects before scraping: HTTP redirects, <code>rel=canonical</code> links, and <code>og:url</code>.

Screenshot from Open Graph Object Debugger:
[[File:facebook-open-graph-object-debugger-2018-01-05.PNG]]

=== How to set description ===
If the first part of the text content of your page is a good description and summary, then you can omit <code>og:description</code>. But if you want specific control over the link preview text content summary, you can use the much older, more widely supported meta description that Facebook also supports (we know from experience, see examples below):

<pre><meta name="description" value="This is a summary of the post and should be limited to one or two sentences. It may be truncated when displayed." /></pre>
Instead of:
<pre><meta property="og:description" content="This is a summary of the post and should be limited to one or two sentences. It may be truncated when displayed." /></pre>

=== How to set image ===
Lastly, Facebook will automatically show the first image that is at least 600px wide on your page, so if that works, no need to use <code>og:image</code>. Otherwise if you want a specific preview image, you can do so:
<pre><meta property="og:image" content="http://example.com/preview-image.jpg" /></pre>

The image should be at least 1200 x 630, a minimum of 600 x 315, and up to 8mb in size. [https://developers.facebook.com/docs/sharing/best-practices#images]

More info: https://developers.facebook.com/docs/sharing/webmasters/#markup

=== Required Properties ===
OGP documentation claims that these four properties are required for every page:
* og:title - The title of your object as it should appear within the graph, e.g., "The Rock".
* og:type - The type of your object, e.g., "video.movie". Depending on the type you specify, other properties may also be required.
* og:image - An image URL which should represent your object within the graph.
* og:url - The canonical URL of your object that will be used as its permanent ID in the graph, e.g., "http://www.imdb.com/title/tt0117500/".

However, in practice they are all optional. Facebook will show a link preview without any of these properties, but in certain cases using them may provide more control (see above "How to" section).

See also the [[Twitter Cards]] documentation which notes that Twitter re-uses (falls back to) various <code>og:</code> meta properties which you can then use instead of Twitter’s own proprietary meta card properties.

== Criticism ==
=== Pseudo-RDFa ===
Rather than use existing meta tag "name" attribute, OGP uses the RDFa "property" attribute, as well as prefixes property names with "og:" to give the appearance of RDFa:

Instead of:
<pre><nowiki>
<meta name="description" content="invisible description of the page"/> 
</nowiki></pre>

OGP uses:
<pre><nowiki>
<meta property="og:description" content="invisible description of the page"/>
</nowiki></pre>

(actual meta name from web legacy and OGP property from their spec)

Text from the Open Graph Object Debugger if you use <code>meta name="description"</code>:

<blockquote><p>Extraneous Property: Objects of this type do not allow properties named 'description'.</p>
<p>Mismatched Metadata: The parser's result for this metadata did not match the input metadata. Likely, this was caused by the data being ordered in an unexpected way, multiple values being given for a property only expecting a single value, or property values for a given property being mismatched. Here are the input properties that were not seen in the parsed result: 'og:description' </p></blockquote>

=== Depends on Invisible Metadata ===
Meta tags, no matter how well-intentioned, are another form of invisible metadata. They are subject to the same problems as meta keywords. ([[DRY]] violation, rotting, spamming, etc.).

The RDF-apologism of using a "property" attribute instead of a "name" attribute doesn't change this, nor does the "og:" syntactic vinegar prefix.

=== Disallows relative URLs ===
Apparently OGP doesn't allow relative URLs[http://indiewebcamp.com/irc/2014-08-19/line/1408480229851].
If you put relative paths into og meta tags:

<code><nowiki><meta property="og:image" content="images/logo.png" /></nowiki></code>

The Open Graph Object Debugger will say it is not an image.

=== Does not support SVG images ===
If you include :

<code><nowiki><meta property="og:image" content="http://mysite.com/logo.svg" /></nowiki></code>

The Open Graph Object Debugger will say it is not an image.

== Indieweb Examples ==
=== David Shanske ===
{{gwg}} is using Open Graph to get data for a link preview when liking/bookmarking/etc on his site when a site is not marked up with Microformats.
* The title from :title
* An excerpt of the URL from :description
* The site name from :site_name (Many sites do not offer the site_name field.
* Tags from article:tag, og:video:tag, etc.
* Location when added.
* A featured image from :image.

This is enough to generate a [[link preview]] in many cases.

=== gRegor Morrill ===
{{gRegor}} is only using <code>og:image</code> currently. I was formerly using <code>og:title</code> and <code>og:description</code> but dropped those because Facebook uses <code>title</code> and <code>meta description</code> as fallbacks.
* Facebook complains that my <code>og:image</code> is too small/cannot be downloaded. It says they require the image to be 200x200. Despite that, it usually shows up when I share a link on Facebook.

=== Aaron Parecki ===
{{aaronpk}} includes Open Graph meta tags on post permalinks since [https://aaronparecki.com/2018/01/05/10/rich-link-previews 2018-01-05], including these properties:
* og:url - the post's permalink
* og:type - article or website
* og:title - The article name, or a truncated version of a note
* og:description - The explicit post summary if authored, otherwise an automatically generated summary based on the first few sentences of the post
* og:image - The featured image, post's first photo, or map image if set. Otherwise is left out.
* og:site_name - Always set to "Aaron Parecki"

== Silo Examples ==
=== Twitter ===
[[Twitter]] prefers [[Twitter Cards]], but will fallback to using some OGP meta tags.

=== Apple ===
Apple’s News app ([https://www.apple.com/pr/library/2015/06/08Apple-Announces-News-App-for-iPhone-iPad.html announced 2015-06-08]) will [https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/News_Publishing_Guide/RSSBestPractices.html prefer Open Graph tags] over general meta tags or [[Schema.org]] metadata.

=== Google+ ===
Google's social hosting silo prefers Schema.org [[microformats]] but will [https://developers.google.com/+/web/snippet/ use OGP] as a first fall-back. {{dgold}} notes that G+ does not reliably pull in content from og:description.

== See Also ==
* [https://developers.facebook.com/tools/debug/og/object/ Facebook's Open Graph Object Debugger]
* [[microformats]]
* [[link-preview]]
* [[Twitter Cards]]
