https://indieweb.org/Taproot

<img src="http://waterpigs.co.uk/taproot/logo.png" alt="" style="width: 10em; float: right; margin-left: 1em; margin-bottom: 1em;" />

<span class="p-summary"><a class="u-url" href="http://taprootproject.com">Taproot</a> is <span class="p-author h-card">[[User:WaterPigs.co.uk|Barnaby Walters]]</span>’ publishing software, written in [[PHP]] 7 and running [http://waterpigs.co.uk waterpigs.co.uk].</span> It is not currently released to the public. However, various parts of it have been extracted into libraries:

* [https://github.com/microformats/php-mf2 php-mf2] for parsing [[microformats]]2 data
** also [https://github.com/indieweb/php-mf2-shim php-mf2-shim] for getting mf2 data out of silos
* [https://github.com/Taproot/indieauth taproot/indieauth] a PSR-7-compatible IndieAuth server library
* [https://github.com/Taproot/micropub-adapter taproot/micropub-adapter] a PSR-7-compatible micropub adapter library
* [https://github.com/Taproot/subscriptions taproot/subscriptions] for easily subscribing+crawling any web content
* [https://github.com/Taproot/archive taproot/archive] your personal opinionated indieweb/microformats-oriented HTML archiver
* [https://github.com/indieweb/php-original-post-discovery indieweb/original-post-discovery] for determining the canonical URL from POSSE copies
* [https://github.com/barnabywalters/php-mf-cleaner mf-cleaner] for handling microformats2 array structures better
* [https://github.com/barnabywalters/diaspora-export diaspora-export] for exporting public posts from Diaspora
* [https://github.com/barnabywalters/php-abc php-abc] for parsing headers out of ABC notation
* <s>[https://github.com/barnabywalters/php-helpers php-helpers]</s>: static helper functions, some utility classes and [[POSSE]] stuff including the truncenator. Slowly having the useful parts extracted into smaller packages.
* <s>[https://github.com/taproot/librarian librarian]</s> for DB indexing of flat files, no longer used/maintained
* <s>[https://github.com/barnabywalters/php-activitystreams php-activitystreams]</s> activitystreams implementation, no longer used/maintained
* <s>[https://github.com/Taproot/authentication taproot/authentication] library concisely implementing indieauth client app + resource server logic</s> replaced by taproot/indieauth.

Most of the Taproot design artifacts are up on github too in [https://github.com/taproot/design taproot/design].

All content-creation UIs in taproot are publicly viewable — take a peek!

* [http://waterpigs.co.uk/notes/new note creation UI]
* [http://waterpigs.co.uk/articles/new article creation UI]

== Design Principles ==

In addition to the indiewebcamp [[principles]], these are some principles I have discovered through building taproot.

* '''Build software which feels safe, all other concerns''' (privacy, security, technically exciting) are secondary [http://waterpigs.co.uk/notes/1181/] — this is based on personal experience through [[selfdogfood]]ing taproot
* '''Easy things should be easy, remove friction so hard things are only has hard as they need to be''' [http://waterpigs.co.uk/notes/1168/]
* '''Build reusable, framework-agnostic components''' and release ''them'' to the public, not monolithic products.

Taproot was named on <time class="dt-published">2014-03-24</time>.

== IndieWeb Support ==
Taproot supports the following:
* All content is marked up using [[microformats2]] so parse at your leisure.
* Supports posting of [[notes]], [[articles]] and [[music]] — other post types are faked with HTML inside notes
* Sends [[pingbacks]] and [[webmention]]s to all the links on every post
* Receives webmentions and pingacks and displays them as [[comments]], [[likes]], [[reposts]] or [[mentions]]
** Hooked up to [[Bridgy]] to display silo interactions in the same place
* [[reply]] notes parse the URL they’re in-reply-to and display a [[reply-context]] if microformats are present
* Notes have [[webactions]] with twitter intent fallback if POSSEd to twitter
* ATOM fallback is provided for all [[feed]]s
* Notes and articles are [[POSSE]]d to [[twitter]] automatically and sometimes manually/indirectly to [[facebook]]
* Logging in using [[indieauth]] and [[distributed-indieauth]]
* New post UI is publicly viewable and can be used to create new posts on other people’s [[micropub]]-enabled sites

== Itches and Roadmap ==

Currently working on:
* Displaying and managing responses, enabling simple pending/accept/reject moderation
* Storing and managing contact information, associating with accept/reject moderation
* Importing all old content, ensuring it displays correctly
* …

Next up, in approximate order of priority:
* Make a media proxy endpoint, allow for fallbacks, local storage of media
* Get posting new content via micropub working, including sending webmentions
** Decouple publishing flow from request handling so that it’s possible to implement scheduled posts?
* Handle incoming webmentions for display as responses
* Importing backfed likes from twitter
* Push the new site live!
* …

Future ideas and to-do list:
* Automatically generate homepage banner from photos tagged #banner
* …

Recently finished:
* <del>Make it possible to post a wider variety of responses to content, hidden from the homepage feed by default</del>
* <del>Re-organise content storage and presentation to make it easier to create feeds with multiple content types in (e.g. homepage feed, tag page feeds)</del>
* <del>Replace DIY CSV indexes with sqlite indexing</del>
* <del>Refactor app, replace silex with a modern mini web framework based on PSR-7, e.g. Slim</del>

== WIP Design notes for future development ==
=== Personal Data Management ===
Have a console command and/or web UI for easy GDPR compliance. Allows the site owner to easily search their site for personal information, showing where it’s located and giving shortcuts to edit it out/delete it.

=== Micropub Integration and Scopes ===
As well as general update, delete and read scopes, offer corresponding scopes which apply only to content which that particular client has created, to give a client full control over content it created, but limit the “damage” it could do elsewhere.

Maybe also have a create_draft scope, which treats a “create” action as creating a new draft, which the user then has to review in Taproot’s UI to publish.

Update actions create new revisions, so everything is reversible.

Delete actions create a new revision with a deleted flag set. Undelete actions probably just delete the latest revision file, causing the previous non-deleted one to become active again. Undeletes should never cause the URL to change (too complicated and annoying).

== History and Development ==

Done (latest first):
* 2021-05 Improved styling, fixed bugs in webmention endpoint, updated homepage bio with tag links
* Implemented anti-[[DDOS]] measures (tried client validation, ditched and went with expiring webmention endpoints)
* Publishing [[venues]] with reviews, inspired by [[User:Tommorris.org|Tom Morris]]
* Implemented a basic micropub endpoint, capable of creating notes
* Made it easier to edit note and article published datetimes and lists of syndication URLs
* Timezones now included in all datetimes in feeds and posts
* Showing mentions+mention counts on articles as well as notes, made templates and logic more reusable
* Composite [[feed]] on homepage instead of just notes
* Implemented distributed Indieauth and micropub, allowing people to use my new-note UI to create posts on their own site
* Integrated with [[Bridgy]] instead of manually shimming [[backfeed]]
* Added file upload control to note uploading UI
* Improved new note location UI with interactive map preview for manual adjustments
* Removed dedicated ATOM endpoints, replaced with generic mf2 to ATOM conversion endpoint
* Basic [[phone]] UI on homepage
** works nicely on desktop, needs improvement and [[Tropo]] involvement for good mobile UX
* Mobile-oriented [[homepage]] design as per [https://github.com/Taproot/design/blob/master/homepage-brainstorming.jpg previous brainstorming]
* Allowed notes to have names, which display as a small title at the top of the note. For shorter named articles which don’t quite fit into /articles, which is styled for long-form “serious” essays
* Improved check in/location note UI, location now shown on interactive [[Leaflet]] map before posting, can be corrected by dragging on map
* Added last-seen location+map, last 3 articles to homepage
* Added a homepage feed after feed reader research demonstrated need for URL -> latest posts
* Deploying new rewritten version
* Rewriting the whole thing to remove frameworkey nonsense code
** using silex as app library
** no DB — faking it with CSV indexes like the idiot I am (it’s actually surprisingly effective)
* Accepting webmentions as well as pingbacks
* Federated comments
* Post-by-[[email]]
* Major migration away from DB storage, toward flat files, with lots of codebase cleanup in the process
* Import of old posts from Diaspora [http://waterpigs.co.uk/notes?tagged=diaspora&before=2012-08-23T17:35:19 see them here]
* Frontend js using Backbone and requirejs

Some old screencaps from around 2013:

[[File:taproot-posting-ui.gif|class=u-photo|caption]]

[[File:note-saved-ui.png|class=u-photo|caption]]

[[Category:Micropub Clients]]

== See Also ==
* [http://waterpigs.co.uk/notes?tagged=taproot Barnaby’s notes tagged with Taproot]
* [[projects]]
