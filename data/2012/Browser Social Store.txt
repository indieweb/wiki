http://indiewebcamp.com/2012/Browser_Social_Store

https://etherpad.mozilla.org/indieweb-browsersoc

Once we have decided we should own our stuff, we could all put our content on personal servers, or we could store/host that in our browsers. (other options too?)

This is possible because browsers now let you store data, install apps, etc.

Server does 2 things:
* store the data
* let you access this over the network when you are elsewhere

Examples: Singly, IFTT

Peer-to-peer is tough
Maybe use webrtc?

Could hijack existing social software interfaces with a browser extension, creating a kind of locker, users would be able to make use of the tool passively

Brittle by definition, websites change
But Chrome gives more options to listen in on the traffic

Data store is the first step, the second is to serve the data back to people

We don't have to recreate all the apps, we just need a way to bring all our data back together

But we do have to bring the data back out, so what does that look like? A big meta feed?

People doing this helps their friends discover their content online

What happens when the user's browser is offline? We could push it out like a broadcast when there are updates, we could mirror or cache the content on server. Does it need to be accessible all the time? Could be a different way of interacting with people, showing presence.

"Bringing presence back into social networking is something interesting."

The data relay could be like an irc server: today I connect to this one, tomorrow I might work through another

The relay or server is a block, someone could shut it down, but the only way to completely avoid that is a ptp solution.

Browser plugins are increasingly html/javascript, reducing the need to per-browser specialization

Storing in the browser still creates a point of failure--the user's computer itself. How do we sync the data, have access, and keep it safe? Browser syncing between machines could help, but data would need to be encrypted.

What to hack on tomorrow? Can we store and serve the data from some social sites?

The best part is side-stepping all the APIs, having access to the data from outside that system and agreement.

[[Category:2012]]
