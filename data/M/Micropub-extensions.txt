https://indieweb.org/Micropub-extensions

This page is for documenting extensions to [[Micropub]]. 

[https://github.com/indieweb/micropub-extensions/projects Discussion on GitHub]

== Server Commands ==
The Micropub spec reserves the <code>mp-</code> prefix in the form-encoded syntax as a mechanism for clients to give commands to servers. This section is for brainstorming additional uses of the <code>mp-</code> functionality.

=== Slug ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/projects/1

Many posting UIs provide an option for the user to choose a slug for the post that will be created. 

[[File:wordpress-customize-slug.png]]

This proposal is for a new mp- command for the client to suggest a slug to the Micropub endpoint.
 
* <code>mp-slug=</code>

The server may or may not decide to respect the requested slug, based on whether it would cause conflicts with other URLs on the site. For example, some URL structures are <code>{year}/{slug}</code>, so the server may decide to modify the slug to avoid conflicting with an existing one.

==== Implementations ====
* Clients
** [[Quill]]
** [[Micropublish]]
* Servers
** [[p3k]]
** [[Transformative]]
** [[Micropub for WordPress]]
** [[Postr]]

=== Destination ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/projects/4

* <code>mp-destination=https://mysite.example.com/</code>

Specify a destination to create a new post on a web site other than the default. The value of <code>mp-destination</code> should be a uid from the array of destinations returned from q=config. See [https://gist.github.com/manton/52e0015f87fcf50c687a0c64e392fc37 an example query response here].

==== Implementations ====
* Clients
** [[Monocle]] - Monocle will check if your Micropub server returns a list of destinations and will then provide an account chooser UI in the footer when viewing a timeline. Selecting an account will cause any of the response buttons to be sent with the corresponding <code>mp-destination</code> value.
* Servers
** [[p3k]]
** [[micro.blog]]

== New Properties ==

=== Post Status ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/projects/2

* <code>post-status=published</code> (or no post-status set) - The post is published, or when the published date is in the future, the post is scheduled.
* <code>post-status=draft</code> - The post is a draft, and should not be shown in lists. (Of course it's up to the implementation whether it wants to use a capability URL for draft posts or actually restrict it to logged-in users.)

==== Implementations ====
* Clients
** [[Quill]]
** [[Indigenous for Android]]
* Servers
** [[p3k]]
** [[Micropub for WordPress]]
** [[IndieWeb for Drupal]]
** [[Postr]] - also uses <code>post-status=deleted</code>

=== Visibility ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/projects/3

* <code>visibility=public</code> (or no visibility set)
* <code>visibility=private</code>

In addition to public/private visibility, [[Wordpress]] also supports password-protected posts. However, passwords are inherently insecure and also not very user friendly, and there are likely better solutions to the problem. Essentially the goal of password-protected posts on Wordpress is to provide "guest access" to posts, where the viewer does not need an account at the site. Flickr accomplishes this with something they call "guest passes".

As well as <code>public</code> or <code>private</code> there could also be use in a value to hide posts from a main feed. {{grantcodes}} uses <code>visibility=unlisted</code> for this with his photo posts that appear in a gallery collection - The photos have their own post with a unique viewable url, but appear in a gallery post in the main feed, not as multiple individual photos. "unlisted" is [https://gist.github.com/joyeusenoelle/74f6e6c0f349651349a0df9ae4582969#how-do-privacy-settings-work already in use by mastodon].

==== Implementations ====
* Clients
** [[OwnYourSwarm]]
** ?
* Servers
** [[Micropub for WordPress]]
** [[p3k]]
** [[abode]]
** [[Postr]]

=== Location Visibility ===

Proposal by {{gwg}} 

* <code>location-visibility=public</code> (or no visibility set)
* <code>location-visibility=private</code>
* <code>location-visibility=protected</code>

This is based on {{gwg}}'s implementation in Simple Location, an Indieweb friendly location plugin, of the WordPress Geodata unofficial guidelines. It states a single property which can be set to public or private, with the absence of the property being considered to be public. Proposing the third property, which will allow for a less specific text only display, but no actual coordinates.

==== Implementations ====
* Clients
** Indigenous for Android
* Servers
** [[Micropub for WordPress]]

== Query ==
Micropub supports making a GET request to a Micropub endpoint with a <code>q=</code> parameter, in order to query aspects of the endpoint or for retrieving the original source content of posts. This section is for brainstorming additional uses of the query functionality. See also [[Micropub-brainstorming#Query_for_other_information]]

=== Query for Supported Vocabulary ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/issues/1

This is an extension for returning what properties a Micropub server supports, so that a client like [[Quill]] or [[Indigenous]] could know to hide or rename the common choices in the UI. This is essentially using reverse [Post Type Discovery]. The following example would be returned as part of the <code>?q=config</code> query

<pre>
  "post-types": [
    {
      "type": "note",
      "name": "Note"
    },
    {
      "type": "article",
      "name": "Blog Post"
    },
    {
      "type": "photo",
      "name": "Photo"
    },
    {
      "type": "video",
      "name": "Video"
    },
    {
      "type": "reply",
      "name": "Reply"
    },
    {
      "type": "like",
      "name": "Like"
    },
    {
      "type": "repost",
      "name": "Repost"
    },
    {
      "type": "rsvp",
      "name": "RSVP"
    },
    {
      "type": "bookmark",
      "name": "Bookmark"
    }
  ]
</pre>

==== Implementations ====
* Clients
** [[Quill]]
** [[Indigenous for Android]]
** [[Monocle]]
* Servers
** [[Micro.blog]]
** [[abode]]
** [[IndieWeb for Drupal]]

=== Query for Post List ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/issues/4

This is a possible extension to the q=source query on my micropub endpoint, if no url is provided it returns a list of posts. This makes the url part of the query really into more of a filter. This would be super handy for clients wanting to present a list of posts to edit/delete/undelete.

Another advantage of this extension is that your micropub server is just responsible for storing and listing posts as microformats, rendering posts can be another bit of software's responsibility 

<pre>
{
 "items": [
  {
    "type": [
      "h-entry"
    ],
    "properties": {
      "like-of": [
        "https:\/\/en.m.wikipedia.org\/wiki\/Poka-yoke"
      ],
      "uid": [
        "20170820131258_59998adae54d0"
      ],
      "published": [
        "2017-08-20T13:12:58+00:00"
      ]
    }
  },
  {
    "type": [
      "h-entry"
    ],
    "properties": {
      "photo": [
        "https:\/\/media.j4y.co\/2017\/cfd007ec-c819-47da-99a2-daec2e91a41e.jpg"
      ],
      "published": [
        "2017-08-19T18:30:40+00:00"
      ],
      "content": [
        ""
      ],
      "category": [
        ""
      ],
      "uid": [
        "20170819175715_59987bfb72c4f"
      ]
    }
  }
}
</pre>

==== Implementations ====
* Clients
** [[Indigenous for Android]]
* Servers
** [[abode]]
** {{j4y_funabashi}}
** [[IndieWeb for Drupal]]
** [[Micropub for WordPress]]
** [[Postr]]

=== Query for Category/Tag List ===
; '''Issues and discussion:''' 
: https://github.com/indieweb/micropub-extensions/issues/5

This is an extension for returning categories that a Micropub server has received in the past, so that a client like [[Quill]] or [[Indigenous]] could present a list of existing categories to choose from when creating a new post. This also incorporates the possibility of being able to search for categories that would match an auto-complete.

The following example would be returned as part of the <code>?q=category</code> query.
<pre>
{
  "categories": [
    "tag1",
    "tag2",
    "tag3",
    "tag4",
    "tag5",
  ]
}
</pre>

The follow example would be returned as part of the <code>?q=category&search=indie</code> query.
<pre>
{
  "categories": [
    "indieweb",
    "indieweb-goals",
    "indienews"
  ]
}
</pre>

==== Implementations ====
* Clients
** Indigenous for Android
* Servers
** [[Micropub for WordPress]]
** [[IndieWeb for Drupal]]
** [[abode]] ({{eddiehinkle.com}})
** [[Micro.blog]]
** [[Postr]]

==== Brainstorming ====
[[category]] - [https://chat.indieweb.org/2017-01-18#t1484741717234000 suggestion] to get all existing tags/categories in the client. Expectation is client would cache and do autocomplete

=== Ideas for other types of queries ===
* [[mp-config]]
* [[venue]] - not yet implemented suggestion of a venue query for a client to retrieve venues as part of check-in functionality.
* extended markup formats – right now it is relatively dependent on the server implementation how text content is treated (1:1, basic processing like linking URLs, Markdown, ...). A query could expose information about this (and maybe even be part of a way to choose for the user)
* media endpoint history – query recent uploads to the media endpoint, e.g. the last X photos uploaded from a phone

=== Questions ===

* According to the current spec (2017-01), a <code>GET ?q=config</code> should also include the <code>syndicate-to</code> property. If the collection of supported properties grows, is this still a thing to hold on to? Venues and tags can make the response potentially large. {{Sebsel}}
** Agreed, I think the empty <code>GET ?q=config</code> should be very limited, and clients should reqest things with potentially large responses separately. <span class="h-card" style="white-space:nowrap">{{sparkline|https://aaronparecki.com/photo.jpg}} [[User:Aaronparecki.com|Aaron Parecki]]</span> 11:40, 11 April 2018 (PDT)

== Location checkin information ==

Indigenous for Android has a checkin post type which passes the checkin information as additional parameters in the Geo URI. The payload property is 'checkin'. It's not doing a JSON post, so you can also immediately upload pictures as well. Additional properties for the venue/location can be added later. The same technique is used to post my geocache logs, see https://indieweb.org/geocaching

<pre>
geo:51.5258325,-0.1359825,0.0;name=london;url=https://hwclondon.co.uk
</pre>

This is supported by the Drupal IndieWeb module. An example can be found here: https://realize.be/checkin/1762

== See Also ==
* [https://micropub.net/draft/ Latest Editor's Draft]
* [[Micropub]]
* [[Micropub-brainstorming]]

[[Category:Micropub]]
