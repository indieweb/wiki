https://indieweb.org/2024/Brighton/hosting

'''<dfn>Hosting Websites</dfn>''' was a session at [[2024/Brighton|IndieWebCamp Brighton 2024]].

<!-- * Video: {{videoduration |link=https://archive.org/update-this-url |duration = mm:ss}}-->

Notes archived from: https://etherpad.indieweb.org/hosting
----
IndieWebCamp Brighton 2024<br>
Session: Hosting Websites<br>
When: 2024-03-09 15:00

== Participants ==
* James
* {{paulrobertlloyd}}
* Jon
* Joschi
* Ana
* Maggie
* {{t}} - remote
* {{addyourself}}

== Notes ==
* Benefits and drawbacks of different ways of hosting are.
* Fundamentally, I would like to be able to make an informed chocie when I decide where to host my website.
* Which host? Which platform? What's sensible? Backups.
** I used to use Panic's Backup for FTP. Is FTP still a thing? Should I use GitHub?
* Is there a starter kit or a course on hosting where I could learn about hosting options and go through the processes. The act of setting up a hello world on a server in itself is difficult.
* A lot of it depends on how much you are willing to take on. For example, if youa re taking a WP approach, you can find hosted solutions for that. That's good because the CMS is friendly to use. You can self-host it later if you want. Or there is the more technically-oriented approach of static site generators, self-hosting.
* when you are using something like WP, it can be easier to integrate domain names in. Buying a domain name is easier. But when you self-host you. need to figure out how to write things up more. 
* It really depends on you.
* How much do you value something that just works with a CMS vs. something more technical?
* What _is_ self-hosting?
* Benefit of WordPress: There is an upgrade path that you can follow.
* One option that I have open is DreamHost. I purchased a space on a server on DreamHost with people who have personal websites. I'm not using it at the moment but DreamHost is great because it falls in between building your own server vs. WordPress which is fully hosted. With DreamHost, you don't have a virtual server; you have a virtual space -- you have a wizard for deploying different web applications. Drupal, WP, etc.
** That is a middle ground. UI-focused but you own the space and the data. NB: You don't own the computing power since you are leasing it.
* It can be dangerous to poll people in technical communities; people enjoy the process.
* What do people use to host websites
** 60% of people use WordPress to host websites.
** Static site generator on Vercel; not good for longevity.
** Static site on Netlify.
** HTML on GitHub Pages.
** Static site but on a server. AWS is provider.
** Static website on Netlify.
** Neocities, micro.blog.
** Dreamhost as hosting service. One of the considerations that came up. I switched a couple of years ago. One of the considerations was portability. The ability to migrate. I had a repvious hosting service where they decided that they don't want to do the business anymore. I had to migrate. that underscored one of the more important parts of a strategy is how easy is it to migrate between different similar options should you choose to change. One challenge we have seen historically is portability.
** Site run on physical server that I administer. Housed in a datacentre. Also projects on AWS. Running own infrastructure on cloud instances.
** Eleventy w/ express.js. Server-side things. Uses Railway.
** Host on GitHub. Site goes to Netlify. It works. I want GitHub to do more things but not be fully reliant on them.
* If you have a friend with an index.html page, where would you tell them to put it.
** GitHub Pages -- free
** Netlify
** Neocities
** UI for GitHub is a bit more complicated for someone starting. Netlify has a drag-and-drop interface.
* Veronica wants to move from Squarespace. Where would we recommend you move?
* You can always change later, but having a good place you can go is meaningful.
* You can drop HTML, CSS, and JS in Netlify.
* Wiring up domains is hairy and doesn't work too well.
** DNS things generates a lot of fear.
* SSL too. Can mostly be handled for you.
* Trade off between ease of getting set up and the ease of writing new posts, etc. Nice UIs are significant; having manual HTML / CSS takes longer to maintain. A barrier to creating content, perhaps? If the process of creating content is so complicated, it might be difficult to create more content. Simple hosting solutions / platforms matter.
* Paradigms of content matter.
** omg.lol
** Linktree
** Carrd
** Digital gardens are hard to host yourself right now
** It almost needs to be a decision tree; answer some questions; what are you prepared to build yourself; what are you prepared to hand over. micro.blog can be quite templated and you can start writing, or you can hack it. But then there are others -- pika.page that Giles Turnbull wrote a blog post about in his indie web post: nice CMS, nice templates, you can start writing. What bits do you want to cede control of / what do you want control over.
** Flow chart of personal websites? Decision trees for people to figure out.
** Maybe filters are better than a flow chart?
** If I click a few, I can get a recommendation or two that is relevant to me.
** Say you don't want to do no DNS, really easy to use.
** blot.im where you can publish to a Dropbox and you can create a personal website.
** There are lots of little services where you get lost in little things.
** Academic institutes have shared hosting for personal websites.
* There are a lot of hosting dead ends; hosting traps. Squarespace makes it really ahd to export your stuff and move it somewhere else and have it function anywhere near what it was. I don't own the UI / templates. I can barely get some content and pictures; there is labour in getting everything set up again. Netlify, GitHub, etc. -- static -- or dynamic hosts like hosted WP, you can migrate between different choices. Pick something that lets you migrate in case you want to pay more / less / shuts down over time.
* It is good to ask people if they want a static page -- James said that. What is popular now is a home page, about page, now pages. Maybe someone wants static pages without being interested in creating a whole social media stream / blog, etc. Or the other option is a split. They get a domain and set up social things. They like micro.blog but don't want to move everywhere. So they up a subdomain that uses Micro.blog; main site is at root domain. Not either/or; you can have a couple of different things.
* Portability is a big driving reason for having a static site generator. There is a lot of flexibility. In the end, if everything goes wrong, you can run your site as a set of files.
* https://stephango.com/file-over-app
** Maggie: Used to be on Netlify. Trivial to shift between services. Hosting seems secondary. I have no fears that my site will be lost because the service goes down.
* Omnibear provides a standard client-server system.
* The tool that you use to write posts is separate from the place where you host your content.
* Reason for using static websites: An important part of the whole process is the writing workflow. First of all, I have a big knowledge base of markdown files, which is significant to me. Second, I would like to be able to work offline. I would not choose WP because I may be commuting, etc. But, I may want to create something; to write. So I want to be able to separate out those processes. It might be even better if I'm offline for producing content.
* Veronica: Hosting is a confusing confusing subject. Fundamentally, I decided to erase my website and take it off Squarespace because it was very easy to set up but then it had limitations that were incredibly sillly. I couldn't change the colour of certain things. I wrote some code but then it wouldn't reflect on the website because I wasn't paying the extra cost. Unclear if WP may be better. Wouldn't mind being more stuck in coding, but it can be a difficult path. not user friendly.
* Are you creating a portfolio / images / blogging / a landing page, etc.?
** At the beginning, was to host CV. Already use IG for pictures. Blogging is something that Veronica wants to explore. Could be a commonplace book; save some links that lead to something I'm interested in.
** Obsidian provides a publishing tool. Does limit you on how you can present your content. You may be able to write CSS. But all of the Obsidian sites look quite similar. But they do interconnected notes which is cool.
* Lots of people use Notion for notetaking. You can build a personal website on Notion. Notion has leant into it. It is built into Notion. It is user friendly. Veronica uses Notion for everything. You can put custom domains on Notion. But there are limits and you are locked in. You could export markdown, but no interactive features.
* URL control is important. If I have a page that's /something/something/something, I can do redirects later.
* Webflow is another tool. May be interesting from a learning point of view. A WSYIWYG over HTML.
* You have to pick your challenge. Don't try and do everything all at once. Get a website, then content.
* Veroninca: Notion becomes old quick; you have access to only three fonts.
** Looking into different hosting options, there is a big difference between beginner friendly Squarespace, WP, etc. and GitHub and writing your own code and everything. I haven't found a site so far that helps me start building something and if I want to I can run my own code, learn, improve my system, etc. Gradual improvements aren't supported in many tools.
* MySpace CSS was a big entry point. Is there something like that today?
** Neocities.
* Gatsby. Not recommended.
* Question on recommendations: having blogs on Tumblr. Not something that Sam has used, but unless I am mistaken you can write custom HTML and CSS. You can attempt to make a website. Don't know how easy it is to get off. It is free. More user-friendly? Is that something that is worth recommending?
** Some people have moved from Tumblr to WP -- this knowledge is a few years old, would require a check.
** Tumblr is parked. Not being shut down, but not being given significant maintenance.
* There are a lot of options in wordpress.com to edit everything, but it is a more advanced feature.
** WordPress.org is the CMS. WordPress.com is the hosted solution. When you are searching for support, though, the .com one may be harder to find information for(? needs verification).
* Many cloud providers have a one-click install. The barrier for self hosting is probably not as big as it used to be. It probably costs a similar amount to host on a server versus on wordpress.com(? needs verification).
* Do we think cloud costs accurately represent the costs of compute, storage, etc.? But if your goal is to have a handful of web pages you edit once per month, is the cost justified on a hosted solution? The cost could be pennies for the provider?
* Bandwidth is an important consideration on free solutions; Vercel, Netlify are cost.
** You get popular, your hosting costs go up, and you get screwed.
* What are we paying for? What do we want?
* Hosting a few websites may be costly if you don't spend time researching different solutions.
* Buy me a Coffee lets you ask people to pay a nominal, voluntary cost for hosting your website. "If you got something out of my content, pay $1", etc.
* Maggie: Sometimes people come and says "I have to pay for this?" in confusion. There is a cost. I always think of the economics of all the friends and conferenced and jobs; cool websites can open career opportunities.


[[Category: 2024 sessions]]
[[Category: IndieWebCamp Brighton 2024]]
== See Also ==
* [[2024/Brighton/Schedule]]
