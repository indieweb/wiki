http://indiewebcamp.com/scrobble

<span style="float:right;height:128px;font-size:128px;margin:0 0 -64px">ðŸŽ§</span>

{{stub}}

A '''<dfn>scrobble</dfn>''' (AKA a <dfn>listen</dfn>) is a [[passive]] type of [[post]] used to publish a song (music or audio track, including concert recordings or DJ sets etc.) that you have listened to.

'''<dfn>scrobbling</dfn>''' is the act of passively publishing scrobbles.

The term "scrobble" comes from [[Last.fm]]'s software, Audioscrobbler.

== IndieWeb Examples ==
=== Michael Owens ===
{{mko}} has imported all 76,000 of his past [[Last.fm]] listens to his site. He can post them manually to his site as well as [[PESOS]] them from Last.fm. Example:
* https://mowens.com/data/2014/10/16/1/take-me-to-church-album-version

Details:
* '''Musicbrainz ID'''. Each of the data elements has a p-* with the Musicbrainz ID of the various Tracks and Albums where it's available.
*  '''Album images'''.  <blockquote>It annoyed me that Last.fm served images without HTTPS, so I cached the imagery for every track. I need to run a checksum comparison of images to remove duplicate files at some point.</blockquote>


=== Acegiak ===
[[user:acegiak.net|acegiak]] PESOS imports her [[Last.fm]] listens to her wordpress blog using the plugin [https://github.com/acegiak/WP_LastFmScrape WP_LastFmScrape]. they are published as listens under the [[Post_Kinds_Plugin]] taxonomy.

=== tommorris.org ===
[[User:Tommorris.org|tommorris]] publishes links to DJ sets (mostly from [[Mixcloud]]) and some songs (mostly from [[Spotify]]) manually (and actively rather than passively) and tags them [https://tommorris.org/tag/currently%20playing currently playing]. May start PESOS-ing from Mixcloud or using a [[bookmarklet]].

=== petermolnar.eu ===
[[User:petermolnar.eu|petermolnar]] wrote an old, 1.2 version of the [http://www.audioscrobbler.net/development/protocol/ audioscrobbler protocol] implementation for WordPress to be able to receive scrobbler requests and store them on his site.

=== davidpea.ch ===
[[User:davidpea.ch|davidpeach]] has written an article on how he uses a bookmarklet to share albums listened to on Google Play all access to his own site. [http://davidpea.ch/articles/671 Semi-automated PESOS from google play music].

He also displays all of his tracked listens on his website at http://davidpea.ch/listens

== Open Source ==
=== Libre.fm and GNU FM ===
There exists https://libre.fm which uses [http://www.gnu.org/software/gnufm GNU FM]. Once could conceivably run this on their own site.

=== WordPress Audioscrobbler server ===
The WordPress [https://github.com/petermolnar/audioscrobbler Audioscrobbler] plugin can receive and store v1.2 scrobble requests as custom post type.

== Brainstorming ==
=== IndieWeb Scrobbling ===

Creating an IndieWeb implementation of a [http://en.wiktionary.org/wiki/scrobble scrobbling] ''server'' or pass-through relay would free data about one's music listening activity and history from the Last.fm silo. One would scrobble tracks to their own personal server before syndicating the activity to other social sites like Last.fm.  All of the scrobbling activity would be archived in a database on one's personal web server. A simple implementation need only implement the basic functionality present in the [http://www.last.fm/api/show?service=443 Last.fm API] such that existing Last.fm client software could be used with minimal modification.

=== Ideas for advanced features ===
Scrobbling activity could be syndicated in other formats (i.e. Activity Streams), or published in another form altogether such as a tweet or status update. 

Scrobbling activity could be filtered prior to syndication. For example, before publishing a track, the software could first check the artist and/or track name is not present in a list of "guilty pleasures."

== See Also ==
* [[posts]]
* [[audio]]
* [[passive]]
* [[metrics]]
