https://indieweb.org/green_computing

{{stub}}
<span class="p-summary">'''<dfn>Green Computing</dfn>''' is practice of using computers and their resources in environmentally responsible way.
A few ways that this can be done, by using green power (Renewable energy) and electronic recycling.</span>

'''This article only deals with stuff you can personally control and is related to the Indieweb movement.''' 

== Brainstorming ==


* While looking for a new [[web_hosting|website host]] check their Sustainability policy.
* Using a [[static_site_generator]] as most web hosts have better deals because they don't need to charge for [[database-antipattern|databases]].

* [[selfdogfood| DIY]] solar/battery powered SBC [https://solar.lowtechmagazine.com/2018/09/how-to-build-a-lowtech-website.html How to Build a Low-tech Website?]. 

== Questions ==
* What is the difference in carbon footprint between different CMS vs static site?
* What is the difference in carbon footprint between playing local media and streaming media?
* How do you optimize images to reduce page weight?
* What is the energy difference between shared hosting and a home server?
* Location data can be energy intensive? How do we optimize collection of GPS data.



=== cloud computing ===

[[cloud|Cloud computing]] company's claim because they can optimize server utilization compared to on-premises computing, that they use less power. But critics like Greenpeace claim that they are still using dirty power [http://www.clickclean.org/]

=== static sites ===

[[static_site]] are the best option

* External resources like [[JavaScript]], [[Cascading_Style_Sheets]] or [[fonts]]/[[icon_font]], there are two options include with your website (more data to download) or use cloud hosted version (less data to download because it been cached in the web browser, but is reliant on third party host)
* External interactive contents ([[webmention.io]], [[Bridgy]] and [[Disqus]]) reliant on third party host.
* A [[static_site_generator]] toolchain could defeat the whole reason for going static.
examples: 
* [https://en.wikipedia.org/wiki/Continuous_deployment|Continuous website deployment] without caching and/or differencing.
* Multiple [[static_site_generator]] build cycles in the toolchain.
* [[User:vincentp.me]]'s [https://github.com/vipickering/mastr-cntrl| mastr-cntrl]



== Indieweb Examples ==
=== Tom sparks ===
I'm in a catch-22, I could build the low-tech website server, but my isp needs me to have a business plan to host anything on my connection and I would still need a CDN.
I have a group of projects in the pipeline that will create large amounts of data, that need to be processed and the pay-as-you-go for cloud computing resources sound very attractive. - [[user:tomasparks.name | tomasparks]]

== see also ==
* [https://aws.amazon.com/about-aws/sustainability/ AWS & Sustainability]
* [http://www.clickclean.org/ greenpeace #ClickClean]
* [https://httparchive.org/reports/page-weight Report:Page Weight]
* [https://en.wikipedia.org/wiki/Computer_recycling Computer recycling]

== Australia ==
* [https://planetark.org/ Planet Ark]
