https://indieweb.org/object-oriented-programming-antipattern

{{stub}}

The '''<dfn>object-oriented-programming antipattern</dfn>''' is the excessive / unnecessary use of object-oriented-programming (OOP) and OOP techniques when simple procedural functions would have sufficed, with less overhead, fewer files to navigate around, fewer indirections to follow while debugging, etc.

== Articles and references ==
* cat -v harmful stuff: <cite>[http://harmful.cat-v.org/software/OO_programming/ Object Oriented Programming is Inherently Harmful]</cite>
* [https://twitter.com/morganastra/status/626818676210143232 fake plt nerd girl ‏@morganastra]  “object orientation is an elaborate web of design traps with something that looks like a computation model woven between them as bait”
* [https://content.pivotal.io/blog/all-evidence-points-to-oop-being-bullshit All evidence points to OOP being bullshit]

== See Also ==
* [[architecture astronomy]]
* [[database-antipattern]]
* https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53
* [[architecture astronomy]]
* https://phpthewrongway.com/
* Article describing some history and (bad) programming/corporate culture effects of OOP: https://web.archive.org/web/20121214131923/http://michaelochurch.wordpress.com/2012/04/13/java-shop-politics
** ""
* Criticism: many layers of class hierarchy (typical OOP practices) make code more opaque for inspection & debugging: https://chat.indieweb.org/dev/2023-06-23/1687483875593100
** "I do remember trying to find the code that does the verification too, but it was so buried in many layers of class hierarchy that I couldn't find anything useful" [http://aaronparecki.com @aaronpk] June 23, 2023
