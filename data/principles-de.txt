http://indiewebcamp.com/principles-de

{{duolingo-de|https://www.duolingo.com/translation/02cc079b97b1ddb71286e700fd056dfe}}

Einige grobe Bauprinzipien des IndieWebs...

* '''[[own-your-data|Own Your Data]]'''. Besitze deine Daten.
* Nutze '''sichtbare Daten''' zuerst für Menschen, danach für Maschinen.
* Erstelle '''Tools für dich selbst''', nicht für alle deine Freunde. Das  [http://de.wikipedia.org/wiki/Metcalfesches_Gesetz Metcalfesche Gesetz] zu bekämpfen, ist überaus schwer: Du wirst Deine Freunde nicht alle überzeugen können, dem unabhängigen Netz beizutreten. Wenn Du aber etwas baust, das deine eigenen Bedürfnisse befriedigt, das gleichzeitig rückwärtskompatibel ist für Leute, die noch nicht beigetreten sind (z.b. durch Anwendung von POSSE), sind die Zeit und der Aufwand zum Bau Deiner eigenen Werkzeuge nicht verschwendet, nur weil andere noch nicht mitmachen.  
* '''[[dogfood|Nutze Dein eigenes Zeug]]'''. Was auch immer Du baust, sollte für Dich selbst sein.   Wenn du Dich nicht darauf verläßt, warum sollte jemand anderes?   Wichtiger, baue das IndieWeb um Deine Bedürfnisse herum.   Wenn Du Tools für hypothetische Nutzer entwirfst, existieren diese vielleicht gar nicht wirklich; wenn Du Tools für Dich selbst entwirfst, existierst Du tatsächlich.
* '''Dokumentiere''' Dein Zeug.   Du hast einen Platz geschaffen, um Deine Meinung zu sagen; nutze ihn, um Deine Arbeitsweise, Ideen, Designs und Codes zu dokumentieren.   Dokumentiere sie zumindest für dein Zukunfts-Ich.  
* Veröffentliche Deine Arbeit ('''Open Source''').Natürlich mußt Du nicht, aber wenn Du die Existenz des Indiewebs magst, bedeutet, Deinen Code bereit zu stellen, daß andere leichter und schneller ins IndieWeb einsteigen können
* '''UX und Design''' sind wichtiger als Protokolle.   Wir konzentrieren uns zuerst auf die User Experience, erst dann entwickeln wir Protokolle, die auf einfachste Weise die UX unterstützen, aber nicht mehr.
* Erstellen '''plattformunabhängig Plattformen'''. Je modularer dein Code ist desto einfacher ist es, einzelne Komponenten auszutauschen und du machst dich unabhängig von speziellen Endgeräten, UIs, Templates, APIs, Programmiersprachen, Datenbanken und Plattformen.   Je modularer dein Code ist, desto wahrscheinlicher ist es, dass zumindest Teile davon wiederverwendet oder verbessert werden können, welche du dann in einem anderem Zusammenhang wieder einsetzen kannst.
* Baue für die '''[http://adactio.com/articles/1522/ Zukunft]'''. Wenn die Menschheit dazu in der Lage ist, Papyrus, viktorianische Fotographien und Dinosaurierknochen zu bewahren, dann sollte es auch möglich sein Web-Technologien zu entwickeln, die wir nicht jedes Jahr wieder neu entwickeln müssen.
* Habe '''Spaß''' dabei. Kannst du dich noch an deine GeoCities Seite erinnern, die du mitte der 90er gebaut hast?   Die mit den Java-Applets, dem giftgrünen Hintergrund und den siebzehn animierten GIFs?   Sie war vielleicht hässlich und schlecht programmiert, aber es machte Spaß.   Lasst uns dazu beitragen, dass das Web so schräg und interessant bleibt.

== Hintergrund ==

Mit dem IndieWebCamp unterstützen wir bewusst eine Vielzahl on Implementierungen und unterschiedlichen Ansätzen.

Ein zentraler Punkt den wir durch das IndieWebCamp gelernt haben ist, dass es keine universale Lösung für ein Problem gibt.

'''We're much more likely to advance the state of the art by encouraging everyone to build what works for them,''' and then figure out how to interoperate between different coding/implementation approaches. This is what makes IndieWebCamp different (more inclusive) than all other such "open source" efforts out there.

Multiple [[projects|implementation efforts]] help to simultaneously explore different parts of the indieweb [http://en.wikipedia.org/wiki/Problem_space problem space] as we're all choosing to focus on building the particular aspects of what's important in an indie web site for ourselves. Additionally, multiple approaches to the ''same'' problems in essence A/B(/C/D/...) test different approaches simultaneously, each of which can then learn from and evolve in response to the others. 

This parallel diversity both produces better indie web solutions faster, and allows for the incorporation of new approaches to address new problems, adapting as the needs of an indie web site change over time.

== Siehe auch ==
* [[why]]
* [[antipatterns]]
