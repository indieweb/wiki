http://indiewebcamp.com/User%3ABen.thatmustbe.me

<dfn>Ben Roberts</dfn> Is a sysadmin and developer at a small company in Boston, MA who dreams of world domination. 

I am currently developing [https://ben.thatmustbe.me my personal site].

* I'm a sysadmin / Developer at a small company in Boston, MA.
* I have my Masters in Computer Science from the University of Rhode Island.
* I run Funtoo Linux on my main workstation.
* I play DDR.
* I am crazy.


= Projects =
== MobilePub ==

Main Aritcle: [[MobilePub]] - [https://github.com/dissolve/mobilepub github]

=== TODO ===
# Add support for single type posting (all data fields can be added to one view)
# Get Android Share Intent working (has been major pain trying to get it running, may just give up)
# Fix saving of offline images
# Fix filename ending on images selected from gallery

== IndieID ==

Main Aritcle: [[IndieID]] - [https://github.com/dissolve/indieid github]

=== TODO ===
# Twitter support
# CSS, currently very plain

== mpTweet ==

Main Aritcle: [[mpTweet]] - [https://github.com/dissolve/mptweet github]

=== TODO ===
# Get micropub chaining working (is not finding mp endpoint on last attempt, i think i can remove code and go straight to sending token / removed mpTweet token endpoint)
# CSS, currently still just a copy of relmeauth's index.php
# Make self documenting (errors tell you what parts you need to fix on your site)

== Postly == 

Main Article: [[Postly]]  - [https://github.com/dissolve/postly github]

This is going to be my personal site and an MVC framework to build off of for others.  Currently in its initial stages, it is based on system libraries from [http://www.opencart.com OpenCart]

=== TODO ===
# build [[reacji]]
# cache external images  and also get https working on everything (no external images at all)
# Add cookie to keep me logged in
# Create Indie Events (and receive RSVPs)
# Improve notifications system, probably break this out in to a proper notification system not just based on all interactions.
# Add some sane way to dismiss notifications system wide (would involve write ability in the webworker)
# Process [[salmentions]] (completed possibly?? not really sure, not tested yet)
# Store / display like count and comment count (or actual comments?) on replies to my posts (completed possibly?? not really sure, not tested yet)
# Scrobble listens from last.fm
# <s>display/receive/</s>send/remove [[person-tag]]
# Contacts List (see below) / Unified Author records
# auto-linking @mentions.  Ideally this will be once contact list / unified authorship is complete and thus would link to the indieweb-page (if available).  Hopefully bridgy can handle this in some way so that syndicated version on twitter uses twitter user links, and indie-web post uses indie-web links.
# context messages to store both short and full urls to save extra polling.
# [[webmention#de-duplication|Deduplication]] (or better yet: [[webmention#prefer_original_posts|prefer original posts]]) of incoming webmentions, (and display posse'd copy links of context-history and replies) (see https://ben.thatmustbe.me/note/2014/9/12/1/_ )
# webactions
# Fix caching of archived pages.  Should not cache current month/day or should clear on edit/create for that month

== Contacts List ==
This is just my ideas for an IndieWeb based contacts application.  I will host my contact info on my own site as [[h-card]] but only public information.  If a user visits the site with a key (custom to them) in the GET value, they get additional info such as mailing address, phone number, etc.   Once I have have access to other's contact info, I build my contact list in a private section of my site.  I could then access this information from an app on my phone or other device or directly through my website.

For key negotiation my current idea is to use webmention on the author page.
Alice wants to get Bob's info in her contact list.  
# Alice inputs Bob's URL in to her site.
# Alice's site gets Bob's site to discover his Author page (perhaps she had to put in his author URL directly)
# Alice's site parses Bob's h-card and adds this information to her contact list.
# Alice's site sends a webmention to Bob's author page saying that he has been added to her contacts.
# Bob's site receives this request and finds Alice's H-card on her site.
# Bob's site records this information for Bob to review later.
# Later Bob logs in to his site and sees that Alice has requested his information.
# Bob decides to give Alice all his contact information.
# Bob is asked to review Alice's URL to be sure that this URL is actually her site.
# Optionally Bob can add this info to his contacts, generating a request in the other direction.
# Bob approves her request and grants full access.
# Bob's site sends a web-mention to Alice's site that includes a generated key for Alice.
# Alice's site uses this key to get the updated contact information from Bob's site (with the key in the URL)

'''Other ideas/considerations:''' 

Use Push notifications rather than h-card on author page.  This would mean a complex push structure and people would know the second you remove access possibly.  Not sure I would like that.

Ability to grant access to specific pieces to certain people.  I might want a close friend to have all my information but others to have only a subset.

Friends without webmention systems can just ask for a URL that I can e-mail them.   I can still specify the key and thereby control their level of access.

Sites should be able to receive keys before they make a request.   (I know my friend will want my full info, so i just send him a link right away)

= Side Projects =

Trying to keep documented the specification as I extend it to complete [https://github.com/dissolve/webmention webmention].  Basically the asynchronous stuff was never specified.
