https://indieweb.org/scrobble

{{emojicon|ðŸŽ§}}
{{stub}}

<div class="p-summary">A '''<dfn>scrobble</dfn>''' (AKA a <dfn>listen</dfn>) is a [[passive]] type of [[post]] used to publish a song (music or audio track, including concert recordings or DJ sets) or podcast that you have listened to.</div>

'''<dfn>scrobbling</dfn>''' is the act of passively publishing scrobbles.

== Origin ==
The term "scrobble" comes from [[Last.fm]]'s software, Audioscrobbler.

== IndieWeb Examples ==
__TOC__
=== Michael Owens ===
{{mko}} has imported all 76,000 of his past [[Last.fm]] listens to his site. He can post them manually to his site as well as [[PESOS]] them from Last.fm. Example:
* https://mowens.com/data/2014/10/16/1/take-me-to-church-album-version

Details:
* '''Musicbrainz ID'''. Each of the data elements has a p-* with the Musicbrainz ID of the various Tracks and Albums where it's available.
*  '''Album images'''.  <blockquote>It annoyed me that Last.fm served images without HTTPS, so I cached the imagery for every track. I need to run a checksum comparison of images to remove duplicate files at some point.</blockquote>


=== Acegiak ===
[[user:acegiak.net|acegiak]] PESOS imports her [[Last.fm]] listens to her wordpress blog using the plugin [https://github.com/acegiak/WP_LastFmScrape WP_LastFmScrape]. they are published as listens under the [[Post_Kinds_Plugin]] taxonomy.

=== tommorris.org ===
[[User:Tommorris.org|tommorris]] publishes links to DJ sets (mostly from [[Mixcloud]]) and some songs (mostly from [[Spotify]]) manually (and actively rather than passively) and tags them [https://tommorris.org/tag/currently%20playing currently playing]. May start PESOS-ing from Mixcloud or using a [[bookmarklet]].

=== davidpea.ch ===
[[User:davidpea.ch|davidpeach]] has written an article on how he uses a bookmarklet to share albums listened to on Google Play all access to his own site. [http://davidpea.ch/articles/671 Semi-automated PESOS from google play music].

He also displays all of his tracked listens on his website at http://davidpea.ch/listens

=== Eddie Hinkle ===
{{eddiehinkle.com}} has been tracking listen posts of podcasts that he listens to since [https://eddiehinkle.com/listen/2017/04/this-week-in-the-indieweb-audio-edition-march-25th-finished/ 2017-04-01]. They are marked up as an h-entry with an experimental u-listen-of property as an h-cite and a p-summary plain-text description and an experimental p-status with the value of "finished" signifying that I have listened to it. I also occasionally post them with p-status=planned to signify that I want to listen to it. The u-listen-of/h-cite property contains a p-name  (The name of the podcast post), u-photo (the cover art of the podcast), u-audio (the embeddable audio file of the podcast) and u-url.

=== Chris Aldrich ===
{{chrisaldrich}} has been posting listens since 2016-12-06 using the [[Post Kinds Plugin]] for [[WordPress]] which wraps the posts with a listen-of microformat. When audio, particularly for [[podcast|podcasts]], is available he includes the audio file along with html <code>audio</code> tags marked up with <code>u-audio</code>. These posts can be found at https://boffosocko.com/kind/listen/ and the feed for these posts at https://boffosocko.com/kind/listen/feed can be subscribed to like a traditional podcast. Because this feed is meant more to help other's discovery of content, he calls this non-traditional podcast a "faux-cast". More details [http://boffosocko.com/2018/03/08/podcasts-of-things-ive-listened-to-or-want-to-listen-to/ here].

=== Jeremy Cherfas ===
{{jeremycherfas}} started tracking podcast listens around 2019-03-24. He uses a PHP script based on {{cleverdevil}}'s Python script to extract the data from an extended OPML supplied by [https://overcast.fm/ Overcast]. Each post is marked with u-listen-of on the link supplied by OverCast. The hope is to make this point to the episode url instead. Listen posts are collected at https://jeremycherfas.net/stream

== Silos ==
=== Last.fm ===
[[Last.fm]] was one of the first silos to have listen posts. The term "scrobble" comes from their software, Audioscrobbler.

[[File:recent_Lastfm_scrobbles.PNG]]

=== Shazam ===
{{main|Shazam}}
Shazam is a music (and television) bookmarking and discovery silo service that operates by listening to ambient sound via an app to identify the content to enable both identification and bookmarking. It creates a private running list of listen posts with some scant details including song titles, artists and album art. These posts include inline audio samples and the ability to share to other silos like [[Facebook]], [[Twitter]], and [[Google+]]. They do not include date or time stamps though there is a Shazam integration with [[IFTTT]] which can allow one to extract more data from the Shazam system to import into one's website by a variety of methods.

[[File:shazam_listen_posts.PNG]]

=== This is my Jam ===
[[This Is My Jam]] (abbreviation TIMJ) was a silo for sharing music you are enjoying, commonly called "jams". While subtly different from listen posts, [[jams]] are ostensibly very similar in form and can provide useful UI examples.

=== SoundHound ===
[https://soundhound.com/soundhound SoundHound] is a music discovery app similar to [[Shazam]]. It creates listen posts with date and timestamps as well as locations, but doesn't provide much in the way of data export from its mobile-only app.


== Tools ==
=== Semantic Linkbacks WordPress Plugin ===
The [[Semantic Linkbacks]] [[WordPress]] plugin consumes the <code>listen-of</code> microformat to display a separate facepile of people listening. See [[#Displaying_Listen_Webmentions]] below.

== Open Source ==
=== Libre.fm and GNU FM ===
There exists https://libre.fm which uses [http://www.gnu.org/software/gnufm GNU FM]. Once could conceivably run this on their own site.

=== WordPress Audioscrobbler server ===
The WordPress [https://github.com/petermolnar/audioscrobbler Audioscrobbler] plugin can receive and store v1.2 scrobble requests as custom post type.

== Brainstorming ==
=== IndieWeb Scrobbling ===

Creating an IndieWeb implementation of a [http://en.wiktionary.org/wiki/scrobble scrobbling] ''server'' or pass-through relay would free data about one's music listening activity and history from the Last.fm silo. One would scrobble tracks to their own personal server before syndicating the activity to other social sites like Last.fm.  All of the scrobbling activity would be archived in a database on one's personal web server. A simple implementation need only implement the basic functionality present in the [http://www.last.fm/api/show?service=443 Last.fm API] such that existing Last.fm client software could be used with minimal modification.

=== Displaying Listen Webmentions ===
Listen/scrobble posts can send [[webmention|webmentions]] to the original content potentially with the experimental <code>listen-of</code> [[microformat]]. In the case of scrobbles of [[podcast|podcasts]], these webmentions could be displayed as Listens which would provide the canonical copy of the podcast some indicator of its popularity. It is tremendously difficult to obtain data on the actual number of listens within most of the podcast community and typically a fraction of the number of downloads must be used as an indicator of the actual listenership. Being able to display actual listens could potentially be a boon to the podcasting market, particularly with respect to advertising.

On [https://github.com/pfefferle/wordpress-semantic-linkbacks/commit/f508b0cce1bda3e3ccb7eb153db8ba430af70b24 2018-04-08] {{GWG}} added the ability for the [[Semantic Linkbacks|Semantic Linkbacks plugin]] to parse and display listen posts to better support [https://david.shanske.com/series/indieweb-podcast/ his podcast] with {{chrisaldrich}}. As a result those who post listens with the listen-of microformat and send webmentions will allow the display listens on his podcast posts. The example UI appears as follows:

[[File:listens.PNG]]

=== Ideas for advanced features ===
Scrobbling activity could be syndicated in other formats (i.e. Activity Streams), or published in another form altogether such as a tweet or status update. 

Scrobbling activity could be filtered prior to syndication. For example, before publishing a track, the software could first check the artist and/or track name is not present in a list of "guilty pleasures."


== See Also ==
* [[posts]]
* [[audio]]
* [[passive]]
* [[metrics]]
* [[podcast]]
* http://www.audioscrobbler.net/development/protocol/

[[Category:PostType]]
* https://www.npr.org/sections/npr-extra/2018/12/11/675250553/remote-audio-data-is-here
* [https://werd.io/2018/with-rad-podcasters-can-finally-learn-whos-listening With RAD, podcasters can finally learn who's listening]
