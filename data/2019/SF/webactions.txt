https://indieweb.org/2019/SF/webactions

'''<dfn>Webactions</dfn>''' was a session at [[2019/SF|IndieWebCamp SF 2019]].

Watch: {{videoduration|link=https://archive.org/details/Webactions|duration=42:15}}

Notes archived from: https://etherpad.indieweb.org/webactions
----
IndieWebCamp SF 2019<br>
Session: Webactions<br>
When: 2019-12-07 14:30

[[File:2019-341-iwc-sf-webactions-1.jpg]]

== Participants ==
* {{t}} (session facilitator)
* {{gwg}}
* {{gRegor}} (remote)
* {{chrisaldrich}} (remote)
* {{adactio}}
* {{jacky}}
* {{addyourself}}

== Notes ==
* http://tantek.com/2011/220/b1/web-actions-a-new-building-block - 2011
* [[webactions]] is a hyperlink label to take a specific act on a webpage. May or may not have JS. To execute an action on another website/application
* Cross-site form submission/hyperlink, etc
* Side note to prior sesssion, we need real time webmentions due the instant expectation.
* It requires a website to rovide controls that allow visitors to take actions

Twitter, Facebook like buttons, are prior art
So like micropub buttons on sites to make it easier to respond?

A custom element <indie-action> was the proposal
* {{t}} shows example of the Twitter intent link
* sia.codes wrote about a similar twitter intent link last week: https://sia.codes/posts/conditional-twitter-intents-with-eleventy/
* {{gwg}} asked if he could wrap his syndication link in an indie-action as an alternative to a twitter intent, for example

Two polyfills....one for the other site, one for yours. One registers a protocol handler, the other ensures the custom element does something.

Tantek is on the [[webactions]] wiki page

There are two people...the person publishing the actions, and the visitor who wants to use them. So if the publisher does not support actions...

Browser extensions, shortcuts, etc may offer a better experience. Tantek challenges an update to barnabywaters Web Action Hero toolkit

Malcolm Blaney supports a popup that allows you to enter in your URL and it will discover your webaction handler.

{{chrisaldrich}}: I've got a bookmarklet scheme via GWG in WordPress post kinds that will allow me to post via something like http://example.com/wp-admin/post-new.php?kind=bookmark&kindurl=@url . A browser exension could add buttons that have pre-registered my URL API scheme... I do this essentially with URL forwarder on Android. (Some of this is documented here: https://boffosocko.com/2017/01/10/browser-bookmarklets-and-mobile-sharing-with-post-kinds-plugin-for-wordpress/ )

{{gRegor}}: I've previously set up a bookmarklet for Twitter that would let me reply via a form on my site similar to Chris. I haven't used it in several months:
* https://gregorlove.com/2017/12/heres-the-latest-version-of/
* Does not work with new Twitter layout; I'm working on an update.

[[Mastodon]] has a handler for likes/replies and has a pop up to ask you what instance/account you want to use (unless you're already logged in)  We should document this.

Can we connect the older webaction markup to the newer webshare API, webmanifest etc? 

Tantek should talk to people working on the [[Web Share API]] whom he knows to add a declarative to support webactions. 
* see also: https://css-tricks.com/how-to-use-the-web-share-api/

Possible Hack Day Projects

* Add my site as a webshare target
* Add web manifest
* Investigate web app manifest for 

[[Microsub]] having built-in buttons may have also been adopted as a solution to this problem. 

Don't just design for the common three: like, repost, comment, or bookmark, but we should be able to extend to reads, listens, chickens, etc. 
The UI for likes should be as quick and easy as how micropub works in some of the microsub clients. Monocle does a good job of this I think and indicates the URL of the Like, but otherwise allows you to more along.

You can trigger from a browser, but you end up with too many options.

[[Category: IndieWebCamp SF 2019]]
[[Category: 2019 sessions]]
== See Also ==
* [[2019/SF/Schedule]]
* [[webactions]]
